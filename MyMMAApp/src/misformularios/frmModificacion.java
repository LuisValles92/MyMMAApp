/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package misformularios;

import com.mysql.cj.jdbc.exceptions.PacketTooBigException;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Blob;
import java.sql.Connection;
import java.util.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.format.DateTimeFormatter;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Luis
 */
public class frmModificacion extends javax.swing.JFrame {

    /**
     * Creates new form frmModificacion
     */
    //Las 2 siguientes líneas son de: MODIFICAR LUCHADOR/RA > BOTÓN: CARGAR NUEVA FOTO
    ImageIcon imagen;
    byte[] datosnuevaimagen;

    Connection con;
    Statement st;
    PreparedStatement pstmt;
    ResultSet rs;

    byte[] datosImagen;

    public frmModificacion() {
        initComponents();

        setTitle("Área de modificación");
        setSize(1170, 850);
        setLocation(45, 130);

        //MODIFICAR CAMPEON
        rbMasculinoCin.setSelected(true);
        rbMasculinoCin.requestFocus();

        tfNombreCin.setEnabled(false);
        tfFechaCin.setEnabled(false);
        tfEdadCin.setEnabled(false);
        tfPaisCin.setEnabled(false);
        tfApodoCin.setEnabled(false);
        tfEquipoCin.setEnabled(false);
        tfPesoCin.setEnabled(false);
        tfAlturaCin.setEnabled(false);
        tfVictCin.setEnabled(false);
        tfDerroCin.setEnabled(false);
        tfEstadoCin.setEnabled(false);

        tfIdCin.setEnabled(false);
        btnModificarCin.setEnabled(false);

        //LINEA PARA CENTRAR ITEMS DE JCOMBOBOX
        ((JLabel) cbCategoriaCin.getRenderer()).setHorizontalAlignment(SwingConstants.CENTER);

        //deshabilita las acciones de copiar y pegar en el campo
        tfIdCin.setTransferHandler(null);

        //MODIFICAR LUCHADOR
        tfSexoMod.setEnabled(false);
        tfNombreMod.setEnabled(false);
        tfEstadoMod.setEnabled(false);
        dcFechaMod.setEnabled(false);
        tfPaisMod.setEnabled(false);
        tfApodoMod.setEnabled(false);
        btnCargarFotoMod.setEnabled(false);
        tfEquipoMod.setEnabled(false);
        tfPesoMod.setEnabled(false);
        tfCategoriaMod.setEnabled(false);
        sAlturaMod.setEnabled(false);
        sTotalMod.setEnabled(false);
        sVictoriasMod.setEnabled(false);
        sDerrotasMod.setEnabled(false);
        btnModificarMod.setEnabled(false);

        tfIdMod.setTransferHandler(null);
        tfSexoMod.setTransferHandler(null);
        tfNombreMod.setTransferHandler(null);
        tfEstadoMod.setTransferHandler(null);
        tfPaisMod.setTransferHandler(null);
        tfEquipoMod.setTransferHandler(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel2 = new javax.swing.JPanel();
        rbMasculinoCin = new javax.swing.JRadioButton();
        rbFemeninoCin = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        cbCategoriaCin = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        panelFotoCin = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfNombreCin = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfFechaCin = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfEdadCin = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tfPaisCin = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfApodoCin = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tfEquipoCin = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tfPesoCin = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tfAlturaCin = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tfVictCin = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        tfDerroCin = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        tfEstadoCin = new javax.swing.JTextField();
        btnBuscarCin = new javax.swing.JButton();
        btnLimpiarCin = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        tfIdCin = new javax.swing.JTextField();
        btnModificarCin = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jLabel15 = new javax.swing.JLabel();
        tfIdMod = new javax.swing.JTextField();
        btnBuscarMod = new javax.swing.JButton();
        btnLimpiarMod = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        tfSexoMod = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        tfNombreMod = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        tfPaisMod = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        tfApodoMod = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        tfEquipoMod = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        tfPesoMod = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        tfCategoriaMod = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        sAlturaMod = new javax.swing.JSpinner();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        sTotalMod = new javax.swing.JSpinner();
        jLabel27 = new javax.swing.JLabel();
        sVictoriasMod = new javax.swing.JSpinner();
        jLabel28 = new javax.swing.JLabel();
        sDerrotasMod = new javax.swing.JSpinner();
        jLabel29 = new javax.swing.JLabel();
        tfEstadoMod = new javax.swing.JTextField();
        dcFechaMod = new com.toedter.calendar.JDateChooser();
        jPanel7 = new javax.swing.JPanel();
        panelFotoMod = new javax.swing.JLabel();
        btnCargarFotoMod = new javax.swing.JButton();
        btnModificarMod = new javax.swing.JButton();
        btnAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("AR JULIAN", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ÁREA DE MODIFICACIÓN");
        jLabel1.setAlignmentY(0.0F);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, -1, -1));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 204));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "SEXO", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonGroup1.add(rbMasculinoCin);
        rbMasculinoCin.setText("MASCULINO");
        rbMasculinoCin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMasculinoCinActionPerformed(evt);
            }
        });
        jPanel2.add(rbMasculinoCin, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, -1));

        buttonGroup1.add(rbFemeninoCin);
        rbFemeninoCin.setText("FEMENINO");
        rbFemeninoCin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFemeninoCinActionPerformed(evt);
            }
        });
        jPanel2.add(rbFemeninoCin, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, -1, -1));

        jLabel2.setText("CATEGORÍA DEL CINTURÓN:");

        cbCategoriaCin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<SELECCIONAR>", "PESO MOSCA", "PESO GALLO", "PESO PLUMA", "PESO LIGERO", "PESO WELTER", "PESO MEDIO", "PESO SEMICOMPLETO", "PESO PESADO" }));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Datos de el/la campeón/a", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "FOTO DE EL/LA CAMPEÓN/A", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelFotoCin.setText("Vista previa");
        panelFotoCin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel4.add(panelFotoCin, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 220, 290));

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 30, 240, 320));

        jLabel3.setText("NOMBRE:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));
        jPanel3.add(tfNombreCin, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 350, -1));

        jLabel4.setText("FECHA DE NACIMIENTO:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));
        jPanel3.add(tfFechaCin, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 120, -1));

        jLabel5.setText("EDAD:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, -1, -1));
        jPanel3.add(tfEdadCin, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 60, -1));

        jLabel6.setText("PAÍS DE ORIGEN:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));
        jPanel3.add(tfPaisCin, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 160, -1));

        jLabel7.setText("APODO DE EL/LA CAMPEÓN/A:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));
        jPanel3.add(tfApodoCin, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, 230, -1));

        jLabel8.setText("EQUIPO DE ENTRENAMIENTO:");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));
        jPanel3.add(tfEquipoCin, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 230, -1));

        jLabel9.setText("PESO (EN KG):");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));
        jPanel3.add(tfPesoCin, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 90, -1));

        jLabel10.setText("ALTURA (EN CM):");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 240, -1, -1));
        jPanel3.add(tfAlturaCin, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 240, 90, -1));

        jLabel11.setText("RÉCORD DE COMBATES:");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, -1, -1));
        jPanel3.add(tfVictCin, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 280, 40, -1));

        jLabel12.setText("_");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 280, 10, -1));
        jPanel3.add(tfDerroCin, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, 40, -1));

        jLabel13.setText("ESTADO:");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, -1));
        jPanel3.add(tfEstadoCin, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 320, 80, -1));

        btnBuscarCin.setText("BUSCAR");
        btnBuscarCin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCinActionPerformed(evt);
            }
        });

        btnLimpiarCin.setText("LIMPIAR");
        btnLimpiarCin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarCinActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("¿NUEVO/A CAMPEÓN/A? - INTRODUZCA LA ID DEL LUCHADOR/A:");

        tfIdCin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfIdCinKeyTyped(evt);
            }
        });

        btnModificarCin.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnModificarCin.setText("MODIFICAR CAMPEÓN/A");
        btnModificarCin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarCinActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(cbCategoriaCin, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnBuscarCin, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnLimpiarCin, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(tfIdCin, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnModificarCin, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(btnBuscarCin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnLimpiarCin))
                            .addComponent(cbCategoriaCin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(tfIdCin, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnModificarCin, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(212, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCategoriaCin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarCin)
                    .addComponent(btnLimpiarCin))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(tfIdCin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModificarCin))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jPanel1.add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 630));

        jTabbedPane1.addTab("MODIFICAR CAMPEÓN/A", jPanel1);

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane2.setBackground(new java.awt.Color(0, 204, 153));

        jLabel15.setText("ID:");

        tfIdMod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfIdModKeyTyped(evt);
            }
        });

        btnBuscarMod.setText("BUSCAR");
        btnBuscarMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarModActionPerformed(evt);
            }
        });

        btnLimpiarMod.setText("LIMPIAR");
        btnLimpiarMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarModActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Datos de el/la luchador/ra", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setText("SEXO:");
        jPanel6.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, -1, -1));

        tfSexoMod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfSexoModKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfSexoModKeyTyped(evt);
            }
        });
        jPanel6.add(tfSexoMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, 170, -1));

        jLabel17.setText("NOMBRE:");
        jPanel6.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        tfNombreMod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNombreModKeyTyped(evt);
            }
        });
        jPanel6.add(tfNombreMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 350, -1));

        jLabel18.setText("FECHA DE NACIMIENTO:");
        jPanel6.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        jLabel19.setText("PAÍS DE ORIGEN:");
        jPanel6.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));

        tfPaisMod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfPaisModKeyTyped(evt);
            }
        });
        jPanel6.add(tfPaisMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 310, -1));

        jLabel20.setText("APODO DE LUCHADOR/RA:");
        jPanel6.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, -1, -1));
        jPanel6.add(tfApodoMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 250, -1));

        jLabel21.setText("EQUIPO DE ENTRENAMIENTO:");
        jPanel6.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, -1, -1));

        tfEquipoMod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfEquipoModKeyTyped(evt);
            }
        });
        jPanel6.add(tfEquipoMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 240, 230, -1));

        jLabel22.setText("PESO (EN KG):");
        jPanel6.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, -1));

        tfPesoMod.setText("0");
        tfPesoMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPesoModActionPerformed(evt);
            }
        });
        tfPesoMod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfPesoModKeyPressed(evt);
            }
        });
        jPanel6.add(tfPesoMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 280, 50, -1));

        jLabel23.setText("CATEGORÍA:");
        jPanel6.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 280, -1, -1));
        jPanel6.add(tfCategoriaMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 280, 150, -1));

        jLabel24.setText("ALTURA (EN CM):");
        jPanel6.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, -1, -1));
        jPanel6.add(sAlturaMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 320, 60, -1));

        jLabel25.setText("RÉCORD DE COMBATES");
        jPanel6.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, -1, -1));

        jLabel26.setText("Nº TOTAL:");
        jPanel6.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, -1, -1));
        jPanel6.add(sTotalMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 360, 60, -1));

        jLabel27.setText("Nº DE VICTORIAS:");
        jPanel6.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, -1, -1));
        jPanel6.add(sVictoriasMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 60, -1));

        jLabel28.setText("Nº DE DERROTAS:");
        jPanel6.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 400, -1, -1));
        jPanel6.add(sDerrotasMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 400, 60, -1));

        jLabel29.setText("ESTADO:");
        jPanel6.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 80, -1, -1));

        tfEstadoMod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfEstadoModKeyTyped(evt);
            }
        });
        jPanel6.add(tfEstadoMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 80, 200, -1));

        dcFechaMod.setDateFormatString("yyyy-MM-dd");
        jPanel6.add(dcFechaMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 260, -1));

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "FOTO LUCHADOR/RA", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelFotoMod.setText("Vista previa");
        panelFotoMod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel7.add(panelFotoMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 190, 230));

        jPanel6.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 120, 210, 260));

        btnCargarFotoMod.setText("¿CARGAR NUEVA FOTO?");
        btnCargarFotoMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarFotoModActionPerformed(evt);
            }
        });
        jPanel6.add(btnCargarFotoMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 390, -1, -1));

        btnModificarMod.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnModificarMod.setText("MODIFICAR LUCHADOR/RA");
        btnModificarMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarModActionPerformed(evt);
            }
        });

        jDesktopPane2.setLayer(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(tfIdMod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(btnBuscarMod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(btnLimpiarMod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jPanel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(btnModificarMod, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addGap(307, 307, 307)
                .addComponent(jLabel15)
                .addGap(27, 27, 27)
                .addComponent(tfIdMod, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101)
                .addComponent(btnBuscarMod)
                .addGap(56, 56, 56)
                .addComponent(btnLimpiarMod)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane2Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane2Layout.createSequentialGroup()
                        .addComponent(btnModificarMod, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(396, 396, 396))))
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(tfIdMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarMod)
                    .addComponent(btnLimpiarMod))
                .addGap(29, 29, 29)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnModificarMod, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel5.add(jDesktopPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 630));

        jTabbedPane1.addTab("MODIFICAR LUCHADOR/RA", jPanel5);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 1030, 650));

        btnAtras.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAtras.setText("ATRÁS");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });
        getContentPane().add(btnAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 150, 87));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbMasculinoCinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMasculinoCinActionPerformed
        // TODO add your handling code here:

        cbCategoriaCin.setEnabled(true);
        cbCategoriaCin.removeAllItems();
        cbCategoriaCin.addItem("<SELECCIONAR>");
        cbCategoriaCin.addItem("PESO MOSCA");
        cbCategoriaCin.addItem("PESO GALLO");
        cbCategoriaCin.addItem("PESO PLUMA");
        cbCategoriaCin.addItem("PESO LIGERO");
        cbCategoriaCin.addItem("PESO WELTER");
        cbCategoriaCin.addItem("PESO MEDIO");
        cbCategoriaCin.addItem("PESO SEMICOMPLETO");
        cbCategoriaCin.addItem("PESO PESADO");
    }//GEN-LAST:event_rbMasculinoCinActionPerformed

    private void rbFemeninoCinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFemeninoCinActionPerformed
        // TODO add your handling code here:
        cbCategoriaCin.setEnabled(true);
        cbCategoriaCin.removeAllItems();
        cbCategoriaCin.addItem("<SELECCIONAR>");
        cbCategoriaCin.addItem("PESO PAJA");
        cbCategoriaCin.addItem("PESO MOSCA");
        cbCategoriaCin.addItem("PESO GALLO");
        cbCategoriaCin.addItem("PESO PLUMA");
    }//GEN-LAST:event_rbFemeninoCinActionPerformed

    private void btnBuscarCinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCinActionPerformed
        // TODO add your handling code here:
        tfIdCin.setText("");
        try {
            String url = "jdbc:mysql://localhost:3306/mymma";
            String userName = "root";
            String password = "";
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection(url, userName, password);

            String sexo = "";
            if (rbMasculinoCin.isSelected()) {
                sexo = rbMasculinoCin.getText();
            } else if (rbFemeninoCin.isSelected()) {
                sexo = rbFemeninoCin.getText();
            }

            if (cbCategoriaCin.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Error en el campo 'CATEGORÍA DEL CINTURÓN': Seleccione una categoría");
            } else {
                String sql = "SELECT * "
                        + "FROM cinturon, luchador "
                        + "WHERE sexoCin=? AND categoriaCin=? "
                        + "AND idLuc=idluchadorcampeonCin";
                pstmt = con.prepareStatement(sql);
                pstmt.setString(1, sexo);
                pstmt.setString(2, cbCategoriaCin.getSelectedItem().toString());

                rs = pstmt.executeQuery();

                if (rs.next() == true) {
                    rbMasculinoCin.setEnabled(false);
                    rbFemeninoCin.setEnabled(false);
                    cbCategoriaCin.setEnabled(false);

                    tfNombreCin.setText(rs.getString("nombreLuc"));
                    tfFechaCin.setText(rs.getString("fechadenacimientoLuc"));

                    //LINEAS PARA OBTENER LA EDAD A TRAVES DE LA FECHA DE NACIMIENTO
                    Date fechanacim = rs.getDate("fechadenacimientoLuc");
                    DateTimeFormatter fmt = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                    LocalDate fechaNac = LocalDate.parse(fechanacim.toString(), fmt);
                    LocalDate currentDate = LocalDate.now();
                    Period periodo = Period.between(fechaNac, currentDate);
                    tfEdadCin.setText(String.valueOf(periodo.getYears()));

                    tfPaisCin.setText(rs.getString("paisLuc"));
                    tfApodoCin.setText(rs.getString("apodoLuc"));
                    tfEquipoCin.setText(rs.getString("equipodeentrenamientoLuc"));
                    tfPesoCin.setText(rs.getString("pesoLuc"));
                    tfAlturaCin.setText(rs.getString("alturaLuc"));
                    tfVictCin.setText(rs.getString("numerodevictoriasLuc"));
                    tfDerroCin.setText(rs.getString("numerodederrotasLuc"));
                    tfEstadoCin.setText(rs.getString("estadoLuc"));

                    Blob foto = rs.getBlob("fotoLuc");

                    if (foto != null) {
                        datosImagen = foto.getBytes(1, (int) foto.length());
                        ImageIcon imagen = new ImageIcon(datosImagen);

                        //Las siguientes 3 líneas ajusta la imagen cargada al tamaño del jlabel
                        Image imageget = imagen.getImage();
                        Image newimg = imageget.getScaledInstance(panelFotoCin.getWidth(), panelFotoCin.getHeight(), Image.SCALE_DEFAULT);
                        imagen = new ImageIcon(newimg);

                        panelFotoCin.setIcon(imagen);
                    }

                    tfIdCin.setEnabled(true);
                    btnModificarCin.setEnabled(true);

                } else {
                    JOptionPane.showMessageDialog(null, "No existe campeón/a para el sexo y la categoría seleccionada");
                }
                rs.close();
                pstmt.close();
                con.close();
            }

        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Error en conexión: ClassNotFoundException");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error en conexión: SQLException" + e);
        }
    }//GEN-LAST:event_btnBuscarCinActionPerformed

    private void btnLimpiarCinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarCinActionPerformed
        // TODO add your handling code here:
        rbMasculinoCin.setEnabled(true);
        rbFemeninoCin.setEnabled(true);
        cbCategoriaCin.setEnabled(true);
        rbMasculinoCin.requestFocus();
        rbMasculinoCin.setSelected(true);
        cbCategoriaCin.removeAllItems();
        cbCategoriaCin.addItem("<SELECCIONAR>");
        cbCategoriaCin.addItem("PESO MOSCA");
        cbCategoriaCin.addItem("PESO GALLO");
        cbCategoriaCin.addItem("PESO PLUMA");
        cbCategoriaCin.addItem("PESO LIGERO");
        cbCategoriaCin.addItem("PESO WELTER");
        cbCategoriaCin.addItem("PESO MEDIO");
        cbCategoriaCin.addItem("PESO SEMICOMPLETO");
        cbCategoriaCin.addItem("PESO PESADO");
        cbCategoriaCin.setSelectedIndex(0);
        tfNombreCin.setText("");
        tfFechaCin.setText("");
        tfEdadCin.setText("");
        tfPaisCin.setText("");
        tfApodoCin.setText("");
        tfEquipoCin.setText("");
        tfPesoCin.setText("");
        tfAlturaCin.setText("");
        tfVictCin.setText("");
        tfDerroCin.setText("");
        tfEstadoCin.setText("");
        panelFotoCin.setIcon(null);
        datosImagen = null;
        tfIdCin.setText("");
        tfIdCin.setEnabled(false);
        btnModificarCin.setEnabled(false);
    }//GEN-LAST:event_btnLimpiarCinActionPerformed

    private void btnModificarCinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarCinActionPerformed
        // TODO add your handling code here:
        if ("".equals(tfIdCin.getText()) || cbCategoriaCin.getSelectedIndex() == 0) {
            if ("".equals(tfIdCin.getText())) {
                JOptionPane.showMessageDialog(null, "Campo vacío, introduzca una ID");
            } else {
                JOptionPane.showMessageDialog(null, "Error en el campo 'CATEGORÍA DEL CINTURÓN': Seleccione una categoría");
            }
        } else {
            int confirmado = JOptionPane.showConfirmDialog(null, "¿Está seguro de que desea modificar el/la campeón/a seleccionado/a con la id " + tfIdCin.getText() + "?");
            if (JOptionPane.OK_OPTION == confirmado) {
                //System.out.println("CONFIRMADO");
                try {
                    String url = "jdbc:mysql://localhost:3306/mymma";
                    String userName = "root";
                    String password = "";
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    con = DriverManager.getConnection(url, userName, password);

                    String sexo = "";
                    if (rbMasculinoCin.isSelected()) {
                        sexo = rbMasculinoCin.getText();
                    } else if (rbFemeninoCin.isSelected()) {
                        sexo = rbFemeninoCin.getText();
                    }

                    /*
                    Para poder modificar al campeon de un cinturon comprobaremos:
                        x Que la id del luchador aportada existe en la bbdd
                        x Que el sexo del cinturon coincide con el sexo del luchador de la id aportada
                        x Que la categoria del cinturon coincide con la categoria del luchador de la id aportada
                        x Que el estado del luchador de la id aportada sea ACTIVO
                     */
                    st = con.createStatement();
                    rs = st.executeQuery("SELECT * FROM luchador");
                    boolean flag_id = true;
                    boolean flag_sexo = true;
                    boolean flag_categoria = true;
                    boolean flag_estado = true;
                    while (rs.next()) {
                        if (rs.getInt(1) != Integer.parseInt(tfIdCin.getText())) {
                            flag_id = false;
                        } else {
                            flag_id = true;
                            if (!rs.getString(2).equals(sexo)) {
                                flag_sexo = false;
                                break;
                            }
                            if (!rs.getString("categoriaLuc").equals(cbCategoriaCin.getSelectedItem().toString())) {
                                flag_categoria = false;
                                break;
                            }
                            if (!rs.getString("estadoLuc").equals("ACTIVO")) {
                                flag_estado = false;
                                break;
                            }
                            break;
                        }
                    }
                    rs.close();
                    st.close();

                    st = con.createStatement();
                    rs = st.executeQuery("SELECT * FROM cinturon WHERE sexoCin='" + sexo + "' && categoriaCin='" + cbCategoriaCin.getSelectedItem().toString() + "'");
                    boolean flag_mismaid = true;
                    while (rs.next()) {
                        if (rs.getInt("idluchadorcampeonCin") == Integer.parseInt(tfIdCin.getText())) {
                            flag_mismaid = false;
                        }
                    }
                    rs.close();
                    st.close();

                    if (flag_id == true && flag_sexo == true && flag_categoria == true && flag_estado == true && flag_mismaid == true) {
                        String sql = "UPDATE cinturon "
                                + "SET idluchadorcampeonCin=? "
                                + "WHERE sexoCin='" + sexo + "' "
                                + "AND categoriaCin='" + cbCategoriaCin.getSelectedItem().toString() + "'";

                        pstmt = con.prepareStatement(sql);

                        pstmt.setInt(1, Integer.parseInt(tfIdCin.getText()));

                        pstmt.executeUpdate();
                        pstmt.close();

                        JOptionPane.showMessageDialog(null, "¡TIENES NUEVO/A CAMPEÓN/A!\n(Vuelva a buscar para actualizar los datos en pantalla)");
                        tfIdCin.setEnabled(false);
                        btnModificarCin.setEnabled(false);
                    } else {
                        if (flag_id == false) {
                            JOptionPane.showMessageDialog(null, "Error: La ID de el/la luchador/a introducida (" + tfIdCin.getText() + ") no existe en la BBDD");
                        }
                        if (flag_sexo == false) {
                            JOptionPane.showMessageDialog(null, "Error: El sexo de el/la luchador/a con la ID (" + tfIdCin.getText() + ") es diferente al sexo del cinturón seleccionado");
                        }
                        if (flag_categoria == false) {
                            JOptionPane.showMessageDialog(null, "Error: La categoría de el/la luchador/a con la ID (" + tfIdCin.getText() + ") es diferente a la categoría del cinturón seleccionado");
                        }
                        if (flag_estado == false) {
                            JOptionPane.showMessageDialog(null, "Error: El estado de el/la luchador/a con la ID (" + tfIdCin.getText() + ") es INACTIVO");
                        }
                        if (flag_mismaid == false) {
                            JOptionPane.showMessageDialog(null, "Error: El/la luchador/a con la ID (" + tfIdCin.getText() + ") ya es campeón/a de este cinturón");
                        }
                    }
                    con.close();

                } catch (ClassNotFoundException e) {
                    JOptionPane.showMessageDialog(null, "Error en conexión: ClassNotFoundException");
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Error en conexión: SQLException" + e);
                }
            } else {
                //System.out.println("NO CONFIRMADO");
            }
        }
    }//GEN-LAST:event_btnModificarCinActionPerformed

    private void tfIdCinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIdCinKeyTyped
        // TODO add your handling code here:
        //SOLO PERMITE INTRODUCIR NÚMEROS EN EL CAMPO
        char car = evt.getKeyChar();
        if (car < '0' || car > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_tfIdCinKeyTyped

    private void tfIdModKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIdModKeyTyped
        // TODO add your handling code here:
        char car = evt.getKeyChar();
        if (car < '0' || car > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_tfIdModKeyTyped

    private void btnBuscarModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarModActionPerformed
        // TODO add your handling code here:
        if ("".equals(tfIdMod.getText())) {
            JOptionPane.showMessageDialog(null, "Campo vacío, introduzca una ID");
        } else {
            try {
                String url = "jdbc:mysql://localhost:3306/mymma";
                String userName = "root";
                String password = "";
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, userName, password);

                st = con.createStatement();
                rs = st.executeQuery("SELECT * FROM luchador");
                boolean flag_id = true;

                while (rs.next()) {
                    if (rs.getInt(1) != Integer.parseInt(tfIdMod.getText())) {
                        flag_id = false;
                    } else {
                        flag_id = true;
                        break;
                    }
                }
                rs.close();
                st.close();

                if (flag_id == true) {

                    tfIdMod.setEnabled(false);
                    btnBuscarMod.setEnabled(false);
                    tfSexoMod.setEnabled(true);
                    tfNombreMod.setEnabled(true);
                    tfEstadoMod.setEnabled(true);
                    dcFechaMod.setEnabled(true);
                    tfPaisMod.setEnabled(true);
                    tfApodoMod.setEnabled(true);
                    btnCargarFotoMod.setEnabled(true);
                    tfEquipoMod.setEnabled(true);
                    tfPesoMod.setEnabled(true);
                    sAlturaMod.setEnabled(true);
                    sTotalMod.setEnabled(true);
                    sVictoriasMod.setEnabled(true);
                    sDerrotasMod.setEnabled(true);
                    btnModificarMod.setEnabled(true);

                    String sql = "SELECT * "
                            + "FROM luchador "
                            + "WHERE idLuc=?";
                    pstmt = con.prepareStatement(sql);
                    pstmt.setString(1, tfIdMod.getText());
                    rs = pstmt.executeQuery();

                    if (rs.next() == true) {
                        tfSexoMod.setText(rs.getString("sexoLuc"));
                        tfNombreMod.setText(rs.getString("nombreLuc"));
                        tfEstadoMod.setText(rs.getString("estadoLuc"));
                        dcFechaMod.setDate(rs.getDate("fechadenacimientoLuc"));
                        tfPaisMod.setText(rs.getString("paisLuc"));
                        tfApodoMod.setText(rs.getString("apodoLuc"));
                        tfEquipoMod.setText(rs.getString("equipodeentrenamientoLuc"));
                        tfPesoMod.setText(rs.getString("pesoLuc"));
                        tfCategoriaMod.setText(rs.getString("categoriaLuc"));
                        sAlturaMod.setValue(rs.getInt("alturaLuc"));
                        sTotalMod.setValue(rs.getInt("numerodecombatesLuc"));
                        sVictoriasMod.setValue(rs.getInt("numerodevictoriasLuc"));
                        sDerrotasMod.setValue(rs.getInt("numerodederrotasLuc"));

                        Blob foto = rs.getBlob("fotoLuc");

                        if (foto != null) {
                            datosImagen = foto.getBytes(1, (int) foto.length());
                            ImageIcon imagen = new ImageIcon(datosImagen);

                            //Las siguientes 3 líneas ajusta la imagen cargada al tamaño del jlabel
                            Image imageget = imagen.getImage();
                            Image newimg = imageget.getScaledInstance(panelFotoMod.getWidth(), panelFotoMod.getHeight(), Image.SCALE_DEFAULT);
                            imagen = new ImageIcon(newimg);

                            panelFotoMod.setIcon(imagen);
                        }

                    }
                    rs.close();
                    pstmt.close();

                    //UN CAMPEÓN/A NO PODRÁ CAMBIAR DE SEXO NI DE PESO NI DE ESTADO, PARA ELLO ANTES DEBE SER REEMPLAZADO
                    st = con.createStatement();
                    rs = st.executeQuery("SELECT * FROM cinturon");
                    boolean flag_campeon = true;
                    while (rs.next()) {
                        if (rs.getInt("idluchadorcampeonCin") != Integer.parseInt(tfIdMod.getText())) {
                            flag_campeon = false;
                        } else {
                            flag_campeon = true;
                            break;
                        }
                    }
                    rs.close();
                    st.close();
                    if (flag_campeon == true) {
                        tfSexoMod.setEnabled(false);
                        tfPesoMod.setEnabled(false);
                        tfEstadoMod.setEnabled(false);
                        JOptionPane.showMessageDialog(null, "ADVERTENCIA: Un campeón/a no podrá cambiar de sexo ni de peso ni de estado, para ello antes debe ser reemplazado/a desde la pestaña 'MODIFICAR CAMPEÓN/A'");
                    }
                    //
                } else {
                    if (flag_id == false) {
                        JOptionPane.showMessageDialog(null, "Error: La ID de el/la luchador/a introducida (" + tfIdMod.getText() + ") no existe en la BBDD");
                    }
                }
                con.close();

            } catch (ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, "Error en conexión: ClassNotFoundException");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error en conexión: SQLException" + e);
            }
        }
    }//GEN-LAST:event_btnBuscarModActionPerformed

    private void btnCargarFotoModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarFotoModActionPerformed
        // TODO add your handling code here:
        if (btnCargarFotoMod == evt.getSource()) {
            File archivofoto;
            JFileChooser explorer = new JFileChooser();

            //filtro para que explore solo archivos imagen
            FileFilter imageFilter = new FileNameExtensionFilter("Image files", ImageIO.getReaderFileSuffixes());
            explorer.setFileFilter(imageFilter);

            int opcion = explorer.showOpenDialog(this);

            imagen = null;

            if (opcion == JFileChooser.APPROVE_OPTION) {
                archivofoto = explorer.getSelectedFile();
                imagen = new ImageIcon(archivofoto.getAbsolutePath());

                //Las siguientes 3 líneas ajusta la imagen cargada al tamaño del jlabel
                Image imageget = imagen.getImage();
                Image newimg = imageget.getScaledInstance(panelFotoMod.getWidth(), panelFotoMod.getHeight(), Image.SCALE_DEFAULT);
                imagen = new ImageIcon(newimg);

                panelFotoMod.setIcon(imagen);

                try {
                    FileInputStream byteImagen = new FileInputStream(archivofoto);

                    long tam = archivofoto.length();
                    datosnuevaimagen = new byte[(int) tam];
                    byteImagen.read(datosnuevaimagen);

                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btnCargarFotoModActionPerformed

    private void btnModificarModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarModActionPerformed
        // TODO add your handling code here:

        boolean flag_edad = false;
        try {
            if (dcFechaMod.getDate() != null) {
                String formato = dcFechaMod.getDateFormatString();
                Date date = dcFechaMod.getDate();
                SimpleDateFormat sdf = new SimpleDateFormat(formato);
                String fnacimi = String.valueOf(sdf.format(date));
                Date fechautildate = sdf.parse(fnacimi);
                java.sql.Date fechasqldate = new java.sql.Date(fechautildate.getYear(), fechautildate.getMonth(), fechautildate.getDate());
                //LINEAS PARA OBTENER LA EDAD A TRAVES DE LA FECHA DE NACIMIENTO
                Date fechanacim = fechasqldate;
                DateTimeFormatter fmt = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                LocalDate fechaNac = LocalDate.parse(fechanacim.toString(), fmt);
                LocalDate currentDate = LocalDate.now();
                Period periodo = Period.between(fechaNac, currentDate);
                int edad_actual = periodo.getYears();
                //RANGO DE EDADES VÁLIDAS: DE 18 HASTA LOS 100 AÑOS
                if (edad_actual < 18 || edad_actual > 100) {
                    flag_edad = true;
                } else {
                    flag_edad = false;
                }
            }
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "Error: ParseException");
        }

        boolean flag_altura = false;
        int alturaint = Integer.parseInt(sAlturaMod.getValue().toString());
        if (alturaint < 100 || alturaint > 250 && alturaint != 0) {
            if (alturaint == 0) {
                flag_altura = false;
            } else {
                flag_altura = true;
            }
        }

        boolean flag_recordpositivo = false;
        int numtotal = Integer.parseInt(sTotalMod.getValue().toString());
        int numvic = Integer.parseInt(sVictoriasMod.getValue().toString());
        int numder = Integer.parseInt(sDerrotasMod.getValue().toString());
        if (numtotal >= 0 && numvic >= 0 && numder >= 0) {
            flag_recordpositivo = false;
        } else {
            flag_recordpositivo = true;
        }

        boolean flag_record = false;
        if (numtotal == numvic + numder) {
            flag_record = false;
        } else {
            flag_record = true;
        }

        if (tfSexoMod.getText().isEmpty() || (!"MASCULINO".equals(tfSexoMod.getText().toUpperCase()) && !"FEMENINO".equals(tfSexoMod.getText().toUpperCase()))
                || tfNombreMod.getText().isEmpty() || tfEstadoMod.getText().isEmpty() || (!"ACTIVO".equals(tfEstadoMod.getText().toUpperCase()) && !"INACTIVO".equals(tfEstadoMod.getText().toUpperCase()))
                || dcFechaMod.getDate() == null || flag_edad == true
                || tfPaisMod.getText().isEmpty() || tfApodoMod.getText().isEmpty()
                || tfEquipoMod.getText().isEmpty() || (!"EQUIPO GRIS".equals(tfEquipoMod.getText().toUpperCase()) && !"EQUIPO NARANJA".equals(tfEquipoMod.getText().toUpperCase())
                && !"EQUIPO VERDE".equals(tfEquipoMod.getText().toUpperCase()) && !"EQUIPO VIOLETA".equals(tfEquipoMod.getText().toUpperCase()))
                || tfCategoriaMod.getText().isEmpty() || flag_altura == true || flag_recordpositivo == true || flag_record == true) {

            if (tfSexoMod.getText().isEmpty() || (!"MASCULINO".equals(tfSexoMod.getText().toUpperCase()) && !"FEMENINO".equals(tfSexoMod.getText().toUpperCase()))) {
                if (tfSexoMod.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "El campo 'SEXO' está vacío");
                } else {
                    JOptionPane.showMessageDialog(null, "El campo 'SEXO' sólo puede ser: MASCULINO o FEMENINO");
                }
            }
            if (tfNombreMod.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "El campo 'NOMBRE' está vacío");
            }
            if (tfEstadoMod.getText().isEmpty() || (!"ACTIVO".equals(tfEstadoMod.getText().toUpperCase()) && !"INACTIVO".equals(tfEstadoMod.getText().toUpperCase()))) {
                if (tfEstadoMod.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "El campo 'ESTADO' está vacío");
                } else {
                    JOptionPane.showMessageDialog(null, "El campo 'ESTADO' sólo puede ser: ACTIVO o INACTIVO");
                }
            }
            if (dcFechaMod.getDate() == null) {
                JOptionPane.showMessageDialog(null, "El campo 'FECHA DE NACIMIENTO' está vacío o marque una fecha válida");
            }
            if (flag_edad == true) {
                JOptionPane.showMessageDialog(null, "Error en el campo 'FECHA DE NACIMIENTO': Rango de edades válidas, desde los 18 hasta los 100 años\nMarque otra fecha");
            }
            if (tfPaisMod.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "El campo 'PAÍS DE ORIGEN' está vacío");
            }
            if (tfApodoMod.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "El campo 'APODO DE LUCHADOR/RA' está vacío");
            }
            if (tfEquipoMod.getText().isEmpty() || (!"EQUIPO GRIS".equals(tfEquipoMod.getText().toUpperCase()) && !"EQUIPO NARANJA".equals(tfEquipoMod.getText().toUpperCase())
                    && !"EQUIPO VERDE".equals(tfEquipoMod.getText().toUpperCase()) && !"EQUIPO VIOLETA".equals(tfEquipoMod.getText().toUpperCase()))) {
                if (tfEquipoMod.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "El campo 'EQUIPO DE ENTRENAMIENTO' está vacío");
                } else {
                    JOptionPane.showMessageDialog(null, "El campo 'EQUIPO DE ENTRENAMIENTO' sólo puede ser: EQUIPO GRIS, EQUIPO NARANJA, EQUIPO VERDE o EQUIPO VIOLETA");
                }
            }
            if (tfCategoriaMod.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "El campo 'CATEGORÍA' está vacío: Para rellenarlo una vez introducido el 'PESO', desde esa casilla, presione la tecla Enter\nRangos de pesos válidos:\nPara luchadores: de 52.3 a 120.2kg\nPara luchadoras: de 48 a 65.6kg");
            }
            if (flag_altura == true) {
                JOptionPane.showMessageDialog(null, "Error en el campo 'ALTURA': rango de estaturas válidas de 100 a 250cm");
            }
            if (flag_recordpositivo == true || flag_record == true) {
                if (flag_recordpositivo == true) {
                    JOptionPane.showMessageDialog(null, "Error: Los campos 'Nº TOTAL', 'Nº DE VICTORIAS' y 'Nº DE DERROTAS' no pueden contener valores negativos");
                } else if (flag_record == true) {
                    JOptionPane.showMessageDialog(null, "Error en el campo 'Nº TOTAL': No coincide la suma de victorias y derrotas con los combates totales");
                }
            }

            //System.out.println("NO");
        } else {
            //System.out.println("SI");
            try {
                String url = "jdbc:mysql://localhost:3306/mymma";
                String userName = "root";
                String password = "";
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, userName, password);

                String formato = dcFechaMod.getDateFormatString();
                Date date = dcFechaMod.getDate();
                SimpleDateFormat sdf = new SimpleDateFormat(formato);
                String fnacim = String.valueOf(sdf.format(date));
                Date fechautildate = sdf.parse(fnacim);
                java.sql.Date fechasqldate = new java.sql.Date(fechautildate.getYear(), fechautildate.getMonth(), fechautildate.getDate());

                String sql = "";
                if (imagen != null) {
                    //MODIFICAR CON UNA NUEVA IMAGEN
                    sql = "UPDATE luchador "
                            + "SET sexoLuc=?,nombreLuc=?,fechadenacimientoLuc=?,paisLuc=?,apodoLuc=?,"
                            + "equipodeentrenamientoLuc=?,pesoLuc=?,categoriaLuc=?,alturaLuc=?,"
                            + "numerodecombatesLuc=?,numerodevictoriasLuc=?,numerodederrotasLuc=?,"
                            + "estadoLuc=?,fotoLuc=? "
                            + "WHERE idLuc='" + tfIdMod.getText() + "'";
                } else if (imagen == null) {
                    //MODIFICAR CON LA IMAGEN ACTUAL (POR DEFECTO)
                    sql = "UPDATE luchador "
                            + "SET sexoLuc=?,nombreLuc=?,fechadenacimientoLuc=?,paisLuc=?,apodoLuc=?,"
                            + "equipodeentrenamientoLuc=?,pesoLuc=?,categoriaLuc=?,alturaLuc=?,"
                            + "numerodecombatesLuc=?,numerodevictoriasLuc=?,numerodederrotasLuc=?,"
                            + "estadoLuc=? "
                            + "WHERE idLuc='" + tfIdMod.getText() + "'";
                }

                pstmt = con.prepareStatement(sql);

                pstmt.setString(1, tfSexoMod.getText().toUpperCase());
                pstmt.setString(2, tfNombreMod.getText().toUpperCase());
                pstmt.setDate(3, fechasqldate);
                pstmt.setString(4, tfPaisMod.getText().toUpperCase());
                pstmt.setString(5, tfApodoMod.getText().toUpperCase());
                pstmt.setString(6, tfEquipoMod.getText().toUpperCase());
                pstmt.setFloat(7, Float.parseFloat(tfPesoMod.getText()));
                pstmt.setString(8, tfCategoriaMod.getText());
                pstmt.setInt(9, Integer.parseInt(sAlturaMod.getValue().toString()));
                pstmt.setInt(10, Integer.parseInt(sTotalMod.getValue().toString()));
                pstmt.setInt(11, Integer.parseInt(sVictoriasMod.getValue().toString()));
                pstmt.setInt(12, Integer.parseInt(sDerrotasMod.getValue().toString()));
                pstmt.setString(13, tfEstadoMod.getText().toUpperCase());

                if (imagen != null) {
                    pstmt.setBytes(14, datosnuevaimagen);
                } else if (imagen == null) {
                    //pstmt.setBytes(14, null);
                }

                pstmt.executeUpdate();

                JOptionPane.showMessageDialog(null, "LUCHADOR/A MODIFICADO/A CORRECTAMENTE");
                tfSexoMod.setEnabled(false);
                tfNombreMod.setEnabled(false);
                tfEstadoMod.setEnabled(false);
                dcFechaMod.setEnabled(false);
                tfPaisMod.setEnabled(false);
                tfApodoMod.setEnabled(false);
                btnCargarFotoMod.setEnabled(false);
                tfEquipoMod.setEnabled(false);
                tfPesoMod.setEnabled(false);
                tfCategoriaMod.setEnabled(false);
                sAlturaMod.setEnabled(false);
                sTotalMod.setEnabled(false);
                sVictoriasMod.setEnabled(false);
                sDerrotasMod.setEnabled(false);
                btnModificarMod.setEnabled(false);

                pstmt.close();

                con.close();
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(null, "Error: ParseException");
            } catch (ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, "Error en conexión: ClassNotFoundException");
            } catch (PacketTooBigException e) {
                JOptionPane.showMessageDialog(null, "Error en el campo 'FOTO LUCHADOR/RA': Foto demasiado grande, cargue una foto más pequeña");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error en conexión: SQLException " + e);
            }
        }


    }//GEN-LAST:event_btnModificarModActionPerformed

    private void tfPesoModKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPesoModKeyPressed
        // TODO add your handling code here:
        tfCategoriaMod.setText("");
    }//GEN-LAST:event_tfPesoModKeyPressed

    private void tfPesoModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPesoModActionPerformed
        // TODO add your handling code here:
        try {
            double peso = Double.parseDouble(tfPesoMod.getText());
            if ("MASCULINO".equals(tfSexoMod.getText().toUpperCase())) {
                if (peso < 52.3 || peso > 120.2) {
                    JOptionPane.showMessageDialog(null, "Introduzca un peso válido: de 52.3 a 120.2kg");
                } else {
                    if (peso >= 52.3 && peso < 56.7) {
                        tfCategoriaMod.setText("PESO MOSCA");
                    }
                    if (peso >= 56.7 && peso < 61.2) {
                        tfCategoriaMod.setText("PESO GALLO");
                    }
                    if (peso >= 61.2 && peso < 65.7) {
                        tfCategoriaMod.setText("PESO PLUMA");
                    }
                    if (peso >= 65.7 && peso < 70.3) {
                        tfCategoriaMod.setText("PESO LIGERO");
                    }
                    if (peso >= 70.3 && peso < 77.1) {
                        tfCategoriaMod.setText("PESO WELTER");
                    }
                    if (peso >= 77.1 && peso < 83.9) {
                        tfCategoriaMod.setText("PESO MEDIO");
                    }
                    if (peso >= 83.9 && peso < 92.9) {
                        tfCategoriaMod.setText("PESO SEMICOMPLETO");
                    }
                    if (peso >= 92.9 && peso <= 120.2) {
                        tfCategoriaMod.setText("PESO PESADO");
                    }
                    tfPesoMod.setEnabled(false);
                    tfSexoMod.setEnabled(false);
                }
            } else if ("FEMENINO".equals(tfSexoMod.getText().toUpperCase())) {
                if (peso < 48 || peso > 65.6) {
                    JOptionPane.showMessageDialog(null, "Introduzca un peso válido: de 48 a 65.6kg");
                } else {
                    if (peso >= 48 && peso < 52.3) {
                        tfCategoriaMod.setText("PESO PAJA");
                    }
                    if (peso >= 52.3 && peso < 56.7) {
                        tfCategoriaMod.setText("PESO MOSCA");
                    }
                    if (peso >= 56.7 && peso < 61.2) {
                        tfCategoriaMod.setText("PESO GALLO");
                    }
                    if (peso >= 61.2 && peso <= 65.6) {
                        tfCategoriaMod.setText("PESO PLUMA");
                    }
                    tfPesoMod.setEnabled(false);
                    tfSexoMod.setEnabled(false);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Error en el campo 'SEXO': Compruebe que sea MASCULINO o FEMENINO");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error en el campo 'PESO': Compruebe que sólo se hayan introducido números");
        }
    }//GEN-LAST:event_tfPesoModActionPerformed

    private void tfSexoModKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSexoModKeyPressed
        // TODO add your handling code here:
        tfCategoriaMod.setText("");
    }//GEN-LAST:event_tfSexoModKeyPressed

    private void tfSexoModKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSexoModKeyTyped
        // TODO add your handling code here:
        char car = evt.getKeyChar();
        if (car < 'A' || car > 'Z' && car < 'a' || car > 'z' && car != 'ñ' && car != 'Ñ') {
            evt.consume();
        }
    }//GEN-LAST:event_tfSexoModKeyTyped

    private void tfNombreModKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNombreModKeyTyped
        // TODO add your handling code here:
        char car = evt.getKeyChar();
        if (car != ' ' && car < 'A' || car > 'Z' && car < 'a' || car > 'z' && car != 'ñ' && car != 'Ñ') {
            evt.consume();
        }
    }//GEN-LAST:event_tfNombreModKeyTyped

    private void tfEstadoModKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfEstadoModKeyTyped
        // TODO add your handling code here:
        char car = evt.getKeyChar();
        if (car < 'A' || car > 'Z' && car < 'a' || car > 'z' && car != 'ñ' && car != 'Ñ') {
            evt.consume();
        }
    }//GEN-LAST:event_tfEstadoModKeyTyped

    private void tfPaisModKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPaisModKeyTyped
        // TODO add your handling code here:
        char car = evt.getKeyChar();
        if (car != ' ' && car < 'A' || car > 'Z' && car < 'a' || car > 'z' && car != 'ñ' && car != 'Ñ') {
            evt.consume();
        }
    }//GEN-LAST:event_tfPaisModKeyTyped

    private void tfEquipoModKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfEquipoModKeyTyped
        // TODO add your handling code here:
        char car = evt.getKeyChar();
        if (car != ' ' && car < 'A' || car > 'Z' && car < 'a' || car > 'z' && car != 'ñ' && car != 'Ñ') {
            evt.consume();
        }
    }//GEN-LAST:event_tfEquipoModKeyTyped

    private void btnLimpiarModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarModActionPerformed
        // TODO add your handling code here:
        tfIdMod.setEnabled(true);
        btnBuscarMod.setEnabled(true);
        tfIdMod.setText("");

        tfSexoMod.setText("");
        tfNombreMod.setText("");
        tfEstadoMod.setText("");
        dcFechaMod.setDate(null);
        tfPaisMod.setText("");
        tfApodoMod.setText("");
        tfEquipoMod.setText("");
        tfPesoMod.setText("0");
        tfCategoriaMod.setText("");
        sAlturaMod.setValue(0);
        sTotalMod.setValue(0);
        sVictoriasMod.setValue(0);
        sDerrotasMod.setValue(0);
        panelFotoMod.setIcon(null);
        datosnuevaimagen = null;
        imagen = null;

        tfIdMod.requestFocus();

        tfSexoMod.setEnabled(false);
        tfNombreMod.setEnabled(false);
        tfEstadoMod.setEnabled(false);
        dcFechaMod.setEnabled(false);
        tfPaisMod.setEnabled(false);
        tfApodoMod.setEnabled(false);
        btnCargarFotoMod.setEnabled(false);
        tfEquipoMod.setEnabled(false);
        tfPesoMod.setEnabled(false);
        tfCategoriaMod.setEnabled(false);
        sAlturaMod.setEnabled(false);
        sTotalMod.setEnabled(false);
        sVictoriasMod.setEnabled(false);
        sDerrotasMod.setEnabled(false);
        btnModificarMod.setEnabled(false);
    }//GEN-LAST:event_btnLimpiarModActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        // TODO add your handling code here:
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmGuia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmGuia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmGuia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmGuia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmGuia().setVisible(true);
                dispose();
            }
        });
    }//GEN-LAST:event_btnAtrasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmModificacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmModificacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmModificacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmModificacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmModificacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnBuscarCin;
    private javax.swing.JButton btnBuscarMod;
    private javax.swing.JButton btnCargarFotoMod;
    private javax.swing.JButton btnLimpiarCin;
    private javax.swing.JButton btnLimpiarMod;
    private javax.swing.JButton btnModificarCin;
    private javax.swing.JButton btnModificarMod;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbCategoriaCin;
    private com.toedter.calendar.JDateChooser dcFechaMod;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel panelFotoCin;
    private javax.swing.JLabel panelFotoMod;
    private javax.swing.JRadioButton rbFemeninoCin;
    private javax.swing.JRadioButton rbMasculinoCin;
    private javax.swing.JSpinner sAlturaMod;
    private javax.swing.JSpinner sDerrotasMod;
    private javax.swing.JSpinner sTotalMod;
    private javax.swing.JSpinner sVictoriasMod;
    private javax.swing.JTextField tfAlturaCin;
    private javax.swing.JTextField tfApodoCin;
    private javax.swing.JTextField tfApodoMod;
    private javax.swing.JTextField tfCategoriaMod;
    private javax.swing.JTextField tfDerroCin;
    private javax.swing.JTextField tfEdadCin;
    private javax.swing.JTextField tfEquipoCin;
    private javax.swing.JTextField tfEquipoMod;
    private javax.swing.JTextField tfEstadoCin;
    private javax.swing.JTextField tfEstadoMod;
    private javax.swing.JTextField tfFechaCin;
    private javax.swing.JTextField tfIdCin;
    private javax.swing.JTextField tfIdMod;
    private javax.swing.JTextField tfNombreCin;
    private javax.swing.JTextField tfNombreMod;
    private javax.swing.JTextField tfPaisCin;
    private javax.swing.JTextField tfPaisMod;
    private javax.swing.JTextField tfPesoCin;
    private javax.swing.JTextField tfPesoMod;
    private javax.swing.JTextField tfSexoMod;
    private javax.swing.JTextField tfVictCin;
    // End of variables declaration//GEN-END:variables
}
