/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package misformularios;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Graphics2D;
import java.awt.Image;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.Period;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Random;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Luis
 */
public class frmConsulta extends javax.swing.JFrame {

    /**
     * Creates new form frmConsulta
     */
    Connection con;
    Statement st;
    PreparedStatement pstmt;
    ResultSet rs;

    byte[] datosImagen;

    private DefaultListModel modelo1 = new DefaultListModel();

    public frmConsulta() {
        initComponents();

        setTitle("Área de consulta");
        setSize(1170, 850);
        setLocation(45, 130);

        btnFiltrarCon.requestFocus();

        cbCategoriaCon.setEnabled(false);
        tfResultadosCon.setEnabled(false);
        btnExpTablaPDF.setEnabled(false);
        btnExpPosterPDF.setEnabled(false);

        //LINEA PARA CENTRAR ITEMS DE JCOMBOBOX
        ((JLabel) cbSexoCon.getRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        ((JLabel) cbEquipoCon.getRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        ((JLabel) cbCategoriaCon.getRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        ((JLabel) cbEstadoCon.getRenderer()).setHorizontalAlignment(SwingConstants.CENTER);

        //CONSULTAR COMBATES DE EVENTO
        jlistComEve.setModel(modelo1);
        modelo1.removeAllElements();
        tfIdComEve.setTransferHandler(null);

        tfNombreEve.setEnabled(false);
        tfPromocionEve.setEnabled(false);
        tfFechaEve.setEnabled(false);
        tfSedeEve.setEnabled(false);
        tfCiudadEve.setEnabled(false);
        //PARA CENTRAR JTEXTFIELD
        tfNombreEve.setHorizontalAlignment(JTextField.CENTER);
        tfPromocionEve.setHorizontalAlignment(JTextField.CENTER);
        tfFechaEve.setHorizontalAlignment(JTextField.CENTER);
        tfSedeEve.setHorizontalAlignment(JTextField.CENTER);
        tfCiudadEve.setHorizontalAlignment(JTextField.CENTER);
        //PARA CENTRAR JLABEL
        jlabelSexo.setHorizontalAlignment(JLabel.CENTER);
        jlabelCategoria.setHorizontalAlignment(JLabel.CENTER);
        jlabelRecordLucRoj.setHorizontalAlignment(JLabel.CENTER);
        jlabelRecordLucAzu.setHorizontalAlignment(JLabel.CENTER);
        jlabelArb.setHorizontalAlignment(JLabel.CENTER);
        jlabelMetodo.setHorizontalAlignment(JLabel.CENTER);
        jlabelRondas.setHorizontalAlignment(JLabel.CENTER);
        jlabelTiempo.setHorizontalAlignment(JLabel.CENTER);

        //CENTRAR LOS ITEM DEL JLIST
        DefaultListCellRenderer renderer1 = (DefaultListCellRenderer) jlistComEve.getCellRenderer();
        renderer1.setHorizontalAlignment(SwingConstants.CENTER);

        btnMarcarCom.setEnabled(false);

        ((JLabel) cbPregunta.getRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        taRespuesta.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jDesktopPane3 = new javax.swing.JDesktopPane();
        jLabel2 = new javax.swing.JLabel();
        cbSexoCon = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cbEquipoCon = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbCategoriaCon = new javax.swing.JComboBox<>();
        cbEstadoCon = new javax.swing.JComboBox<>();
        btnFiltrarCon = new javax.swing.JButton();
        btnLimpiarCon = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaUna = new javax.swing.JTable();
        tfResultadosCon = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnExpTablaPDF = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jDesktopPane4 = new javax.swing.JDesktopPane();
        jLabel7 = new javax.swing.JLabel();
        tfIdLucPos = new javax.swing.JTextField();
        btnBuscarLucPos = new javax.swing.JButton();
        btnLimpiarLucPos = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jlApodoLucPos = new javax.swing.JLabel();
        panelFotoPoster = new javax.swing.JLabel();
        jlPaisLucPos = new javax.swing.JLabel();
        jlFechaLucPos = new javax.swing.JLabel();
        btnExpPosterPDF = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel8 = new javax.swing.JLabel();
        tfIdComEve = new javax.swing.JTextField();
        btnBuscarComEve = new javax.swing.JButton();
        btnLimpiarComEve = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlistComEve = new javax.swing.JList<>();
        btnMarcarCom = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        tfNombreEve = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tfPromocionEve = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tfFechaEve = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        tfSedeEve = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        tfCiudadEve = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jlabelPromocionEve = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jlabelSexo = new javax.swing.JLabel();
        jlabelCategoria = new javax.swing.JLabel();
        jlabelImaCin = new javax.swing.JLabel();
        jlabelFotoLucRoj = new javax.swing.JLabel();
        jlabelFotoLucAzu = new javax.swing.JLabel();
        jlabelImaResLucAzu = new javax.swing.JLabel();
        jlabelImaResLucRoj = new javax.swing.JLabel();
        jlabelRecordLucRoj = new javax.swing.JLabel();
        jlabelRecordLucAzu = new javax.swing.JLabel();
        jlabelArb = new javax.swing.JLabel();
        jlabelMetodo = new javax.swing.JLabel();
        jlabelRondas = new javax.swing.JLabel();
        jlabelTiempo = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jLabel15 = new javax.swing.JLabel();
        cbPregunta = new javax.swing.JComboBox<>();
        btnLimpiarRespuesta = new javax.swing.JButton();
        btnResponder = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        taRespuesta = new javax.swing.JTextArea();
        btnAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("AR JULIAN", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ÁREA DE CONSULTA");
        jLabel1.setAlignmentY(0.0F);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 50, -1, -1));

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane3.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("SEXO:");

        cbSexoCon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<SELECCIONAR>", "MASCULINO", "FEMENINO" }));
        cbSexoCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSexoConActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("EQUIPO DE ENTRENAMIENTO:");

        cbEquipoCon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<SELECCIONAR>", "EQUIPO GRIS", "EQUIPO NARANJA", "EQUIPO VERDE", "EQUIPO VIOLETA" }));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("CATEGORÍA:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("ESTADO:");

        cbCategoriaCon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<SELECCIONAR>" }));

        cbEstadoCon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<SELECCIONAR>", "ACTIVO", "INACTIVO" }));

        btnFiltrarCon.setText("FILTRAR");
        btnFiltrarCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarConActionPerformed(evt);
            }
        });

        btnLimpiarCon.setText("LIMPIAR");
        btnLimpiarCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarConActionPerformed(evt);
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TablaUna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaUna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaUnaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaUna);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 320));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("RESULTADOS:");

        btnExpTablaPDF.setText("EXPORTAR TABLA EN UN DOCUMENTO PDF");
        btnExpTablaPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpTablaPDFActionPerformed(evt);
            }
        });

        jDesktopPane3.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(cbSexoCon, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(cbEquipoCon, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(cbCategoriaCon, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(cbEstadoCon, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(btnFiltrarCon, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(btnLimpiarCon, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(tfResultadosCon, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(btnExpTablaPDF, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane3Layout = new javax.swing.GroupLayout(jDesktopPane3);
        jDesktopPane3.setLayout(jDesktopPane3Layout);
        jDesktopPane3Layout.setHorizontalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane3Layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbEquipoCon, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbCategoriaCon, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbEstadoCon, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbSexoCon, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(btnFiltrarCon, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLimpiarCon, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jDesktopPane3Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 920, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                                .addComponent(btnExpTablaPDF)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(tfResultadosCon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jDesktopPane3Layout.setVerticalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jDesktopPane3Layout.createSequentialGroup()
                        .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbSexoCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbEquipoCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbCategoriaCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbEstadoCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(jDesktopPane3Layout.createSequentialGroup()
                        .addComponent(btnFiltrarCon, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLimpiarCon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(28, 28, 28)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfResultadosCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btnExpTablaPDF))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        jPanel5.add(jDesktopPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 620));

        jTabbedPane3.addTab("FILTRA TU LUCHADOR/RA", jPanel5);

        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane4.setBackground(new java.awt.Color(0, 204, 153));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("ID:");

        tfIdLucPos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfIdLucPosKeyTyped(evt);
            }
        });

        btnBuscarLucPos.setText("BUSCAR");
        btnBuscarLucPos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarLucPosActionPerformed(evt);
            }
        });

        btnLimpiarLucPos.setText("LIMPIAR");
        btnLimpiarLucPos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarLucPosActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "PÓSTER DE LUCHADOR/RA", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlApodoLucPos.setFont(new java.awt.Font("Viner Hand ITC", 1, 18)); // NOI18N
        jlApodoLucPos.setForeground(new java.awt.Color(255, 255, 0));
        jlApodoLucPos.setText("X");
        jPanel7.add(jlApodoLucPos, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, -1, -1));

        panelFotoPoster.setText("Vista previa");
        panelFotoPoster.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel7.add(panelFotoPoster, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 370, 360));

        jlPaisLucPos.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jlPaisLucPos.setText("MADE IN X");
        jPanel7.add(jlPaisLucPos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jlFechaLucPos.setFont(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        jlFechaLucPos.setText("SINCE XXXX-XX-XX");
        jPanel7.add(jlFechaLucPos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, -1, -1));

        btnExpPosterPDF.setText("EXPORTAR PÓSTER EN UN DOCUMENTO PDF");
        btnExpPosterPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpPosterPDFActionPerformed(evt);
            }
        });

        jDesktopPane4.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(tfIdLucPos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(btnBuscarLucPos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(btnLimpiarLucPos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(jPanel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(btnExpPosterPDF, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane4Layout = new javax.swing.GroupLayout(jDesktopPane4);
        jDesktopPane4.setLayout(jDesktopPane4Layout);
        jDesktopPane4Layout.setHorizontalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                .addContainerGap(94, Short.MAX_VALUE)
                .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane4Layout.createSequentialGroup()
                        .addComponent(btnExpPosterPDF)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(259, 259, 259))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane4Layout.createSequentialGroup()
                        .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jDesktopPane4Layout.createSequentialGroup()
                                .addComponent(btnBuscarLucPos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnLimpiarLucPos))
                            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(tfIdLucPos)))
                        .addGap(377, 377, 377))))
        );
        jDesktopPane4Layout.setVerticalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnExpPosterPDF)
                    .addGroup(jDesktopPane4Layout.createSequentialGroup()
                        .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(tfIdLucPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuscarLucPos)
                            .addComponent(btnLimpiarLucPos))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jPanel9.add(jDesktopPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 630));

        jTabbedPane3.addTab("CREA TU PÓSTER", jPanel9);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane1.setBackground(new java.awt.Color(0, 255, 204));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("ID DE EVENTO:");

        tfIdComEve.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfIdComEveKeyTyped(evt);
            }
        });

        btnBuscarComEve.setText("BUSCAR");
        btnBuscarComEve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarComEveActionPerformed(evt);
            }
        });

        btnLimpiarComEve.setText("LIMPIAR");
        btnLimpiarComEve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarComEveActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Seleccionar Combate");

        jScrollPane2.setViewportView(jlistComEve);

        btnMarcarCom.setText("MARCAR");
        btnMarcarCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarcarComActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMarcarCom, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnMarcarCom)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("NOMBRE:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("PROMOCIÓN:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("FECHA:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("SEDE:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("CIUDAD:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfNombreEve, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfPromocionEve, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfFechaEve, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfSedeEve, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfCiudadEve, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jLabel10)
                .addGap(189, 189, 189)
                .addComponent(jLabel11)
                .addGap(100, 100, 100)
                .addComponent(jLabel12)
                .addGap(101, 101, 101)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(107, 107, 107))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfNombreEve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPromocionEve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfFechaEve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSedeEve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCiudadEve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jlabelPromocionEve.setText("Vista previa");
        jlabelPromocionEve.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jlabelSexo.setFont(new java.awt.Font("Rod", 3, 14)); // NOI18N
        jlabelSexo.setText("SEXO");
        jlabelSexo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jlabelCategoria.setFont(new java.awt.Font("Rod", 3, 14)); // NOI18N
        jlabelCategoria.setText("CATEGORIA");
        jlabelCategoria.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jlabelImaCin.setText("Vista previa");
        jlabelImaCin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlabelFotoLucRoj.setText("Vista previa");
        jlabelFotoLucRoj.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 0), 2));

        jlabelFotoLucAzu.setText("Vista previa");
        jlabelFotoLucAzu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 255), 2));

        jlabelImaResLucAzu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlabelImaResLucRoj.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlabelRecordLucRoj.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlabelRecordLucRoj.setText("RÉCORD:");
        jlabelRecordLucRoj.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 0)));

        jlabelRecordLucAzu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlabelRecordLucAzu.setText("RÉCORD:");
        jlabelRecordLucAzu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 255)));

        jlabelArb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlabelArb.setText("ÁRBITRO:");
        jlabelArb.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlabelMetodo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlabelMetodo.setText("MÉTODO:");
        jlabelMetodo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlabelRondas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlabelRondas.setText("Nº RONDAS:");
        jlabelRondas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlabelTiempo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlabelTiempo.setText("TIEMPO:");
        jlabelTiempo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlabelImaResLucRoj, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jlabelFotoLucRoj, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jlabelMetodo, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                                    .addComponent(jlabelArb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jlabelRondas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jlabelTiempo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(44, 44, 44))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jlabelCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jlabelRecordLucRoj, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                                        .addComponent(jlabelRecordLucAzu, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)))
                        .addComponent(jlabelFotoLucAzu, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlabelImaResLucAzu, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jlabelImaCin, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(jlabelSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabelImaCin, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlabelSexo)
                    .addComponent(jlabelCategoria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jlabelImaResLucAzu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlabelFotoLucAzu, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jlabelRecordLucRoj)
                                    .addComponent(jlabelRecordLucAzu))
                                .addGap(18, 18, 18)
                                .addComponent(jlabelArb)
                                .addGap(18, 18, 18)
                                .addComponent(jlabelMetodo)
                                .addGap(18, 18, 18)
                                .addComponent(jlabelRondas)
                                .addGap(18, 18, 18)
                                .addComponent(jlabelTiempo))
                            .addComponent(jlabelFotoLucRoj, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlabelImaResLucRoj, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );

        jDesktopPane1.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(tfIdComEve, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnBuscarComEve, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnLimpiarComEve, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jlabelPromocionEve, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(btnBuscarComEve)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnLimpiarComEve))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(tfIdComEve, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(411, 411, 411))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(jlabelPromocionEve, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(150, 150, 150))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfIdComEve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarComEve)
                    .addComponent(btnLimpiarComEve))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlabelPromocionEve, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel2.add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 620));

        jTabbedPane3.addTab("CONSULTA COMBATES DE EVENTO", jPanel2);

        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane2.setBackground(new java.awt.Color(153, 0, 153));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("PREGUNTA:");

        cbPregunta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<SELECCIONAR>", "¿QUÉ EVENTO TUVO LA MAYOR ASISTENCIA?", "¿QUÉ EVENTO TUVO LA MAYOR RECAUDACIÓN?", "¿QUÉ EVENTO TUVO LA MENOR ASISTENCIA?", "¿QUÉ EVENTO TUVO LA MENOR RECAUDACIÓN?", "¿CUÁL ES LA ASISTENCIA MEDIA DE TODOS LOS EVENTOS?", "¿CUÁL ES LA RECAUDACIÓN MEDIA DE TODOS LOS EVENTOS?", "¿QUÉ COMBATES TUVO CADA EVENTO?", "¿QUÉ LUCHADORES/AS HAY DE CADA PAÍS?", "¿QUIÉN ES EL LUCHADOR O LA LUCHADORA MÁS JÓVEN?", "¿QUIÉN ES EL LUCHADOR O LA LUCHADORA MÁS MAYOR?", "¿QUÉ EDAD TIENE CADA LUCHADOR/RA?", "¿QUIÉNES SON LOS CAMPEONES DE CADA CINTURÓN?" }));

        btnLimpiarRespuesta.setText("LIMPIAR");
        btnLimpiarRespuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarRespuestaActionPerformed(evt);
            }
        });

        btnResponder.setText("RESPONDER");
        btnResponder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResponderActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("RESPUESTA:");

        taRespuesta.setColumns(20);
        taRespuesta.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        taRespuesta.setRows(5);
        jScrollPane3.setViewportView(taRespuesta);

        jDesktopPane2.setLayer(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(cbPregunta, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(btnLimpiarRespuesta, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(btnResponder, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jLabel16, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addGap(235, 235, 235)
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jLabel16)
                    .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jDesktopPane2Layout.createSequentialGroup()
                            .addComponent(btnResponder)
                            .addGap(18, 18, 18)
                            .addComponent(btnLimpiarRespuesta))
                        .addGroup(jDesktopPane2Layout.createSequentialGroup()
                            .addComponent(jLabel15)
                            .addGap(18, 18, 18)
                            .addComponent(cbPregunta, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator1))
                .addContainerGap(229, Short.MAX_VALUE))
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(cbPregunta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpiarRespuesta)
                    .addComponent(btnResponder))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(121, Short.MAX_VALUE))
        );

        jPanel8.add(jDesktopPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 620));

        jTabbedPane3.addTab("OTRAS CONSULTAS", jPanel8);

        getContentPane().add(jTabbedPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 1030, 650));

        btnAtras.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAtras.setText("ATRÁS");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });
        getContentPane().add(btnAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 150, 87));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbSexoConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSexoConActionPerformed
        // TODO add your handling code here:
        JComboBox comboBox = (JComboBox) evt.getSource();
        Object selected = comboBox.getSelectedItem();
        if (selected.toString().equals("MASCULINO")) {
            cbCategoriaCon.setEnabled(true);
            cbCategoriaCon.removeAllItems();
            cbCategoriaCon.addItem("<SELECCIONAR>");
            cbCategoriaCon.addItem("PESO MOSCA");
            cbCategoriaCon.addItem("PESO GALLO");
            cbCategoriaCon.addItem("PESO PLUMA");
            cbCategoriaCon.addItem("PESO LIGERO");
            cbCategoriaCon.addItem("PESO WELTER");
            cbCategoriaCon.addItem("PESO MEDIO");
            cbCategoriaCon.addItem("PESO SEMICOMPLETO");
            cbCategoriaCon.addItem("PESO PESADO");
        } else if (selected.toString().equals("FEMENINO")) {
            cbCategoriaCon.setEnabled(true);
            cbCategoriaCon.removeAllItems();
            cbCategoriaCon.addItem("<SELECCIONAR>");
            cbCategoriaCon.addItem("PESO PAJA");
            cbCategoriaCon.addItem("PESO MOSCA");
            cbCategoriaCon.addItem("PESO GALLO");
            cbCategoriaCon.addItem("PESO PLUMA");
        } else {
            cbCategoriaCon.setEnabled(false);
            cbCategoriaCon.removeAllItems();
            cbCategoriaCon.addItem("<SELECCIONAR>");
            cbCategoriaCon.setSelectedIndex(0);
        }
    }//GEN-LAST:event_cbSexoConActionPerformed

    private void btnFiltrarConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarConActionPerformed
        // TODO add your handling code here:
        btnExpTablaPDF.setEnabled(true);
        if (evt.getSource() == btnFiltrarCon) {
            try {
                String url = "jdbc:mysql://localhost:3306/mymma";
                String userName = "root";
                String password = "";
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, userName, password);

                String sql;
                if (cbSexoCon.getSelectedIndex() == 0 && cbEquipoCon.getSelectedIndex() == 0
                        && cbCategoriaCon.getSelectedIndex() == 0 && cbEstadoCon.getSelectedIndex() == 0) {
                    sql = "SELECT * FROM luchador "
                            + "ORDER BY sexoLuc,pesoLuc,estadoLuc,nombreLuc";
                    pstmt = con.prepareStatement(sql);
                }
                //
                if (cbSexoCon.getSelectedIndex() != 0 && cbEquipoCon.getSelectedIndex() == 0
                        && cbCategoriaCon.getSelectedIndex() == 0 && cbEstadoCon.getSelectedIndex() == 0) {
                    sql = "SELECT * FROM luchador "
                            + "WHERE sexoLuc=? "
                            + "ORDER BY sexoLuc,pesoLuc,estadoLuc,nombreLuc";
                    pstmt = con.prepareStatement(sql);
                    pstmt.setString(1, cbSexoCon.getSelectedItem().toString());
                }
                if (cbSexoCon.getSelectedIndex() == 0 && cbEquipoCon.getSelectedIndex() != 0
                        && cbCategoriaCon.getSelectedIndex() == 0 && cbEstadoCon.getSelectedIndex() == 0) {
                    sql = "SELECT * FROM luchador "
                            + "WHERE equipodeentrenamientoLuc=? "
                            + "ORDER BY sexoLuc,pesoLuc,estadoLuc,nombreLuc";
                    pstmt = con.prepareStatement(sql);
                    pstmt.setString(1, cbEquipoCon.getSelectedItem().toString());
                }
                if (cbSexoCon.getSelectedIndex() == 0 && cbEquipoCon.getSelectedIndex() == 0
                        && cbCategoriaCon.getSelectedIndex() == 0 && cbEstadoCon.getSelectedIndex() != 0) {
                    sql = "SELECT * FROM luchador "
                            + "WHERE estadoLuc=? "
                            + "ORDER BY sexoLuc,pesoLuc,estadoLuc,nombreLuc";
                    pstmt = con.prepareStatement(sql);
                    pstmt.setString(1, cbEstadoCon.getSelectedItem().toString());
                }
                //
                if (cbSexoCon.getSelectedIndex() != 0 && cbEquipoCon.getSelectedIndex() != 0
                        && cbCategoriaCon.getSelectedIndex() == 0 && cbEstadoCon.getSelectedIndex() == 0) {
                    sql = "SELECT * FROM luchador "
                            + "WHERE sexoLuc=? AND equipodeentrenamientoLuc=? "
                            + "ORDER BY sexoLuc,pesoLuc,estadoLuc,nombreLuc";
                    pstmt = con.prepareStatement(sql);
                    pstmt.setString(1, cbSexoCon.getSelectedItem().toString());
                    pstmt.setString(2, cbEquipoCon.getSelectedItem().toString());
                }
                if (cbSexoCon.getSelectedIndex() != 0 && cbEquipoCon.getSelectedIndex() == 0
                        && cbCategoriaCon.getSelectedIndex() != 0 && cbEstadoCon.getSelectedIndex() == 0) {
                    sql = "SELECT * FROM luchador "
                            + "WHERE sexoLuc=? AND categoriaLuc=? "
                            + "ORDER BY sexoLuc,pesoLuc,estadoLuc,nombreLuc";
                    pstmt = con.prepareStatement(sql);
                    pstmt.setString(1, cbSexoCon.getSelectedItem().toString());
                    pstmt.setString(2, cbCategoriaCon.getSelectedItem().toString());
                }
                if (cbSexoCon.getSelectedIndex() != 0 && cbEquipoCon.getSelectedIndex() == 0
                        && cbCategoriaCon.getSelectedIndex() == 0 && cbEstadoCon.getSelectedIndex() != 0) {
                    sql = "SELECT * FROM luchador "
                            + "WHERE sexoLuc=? AND estadoLuc=? "
                            + "ORDER BY sexoLuc,pesoLuc,estadoLuc,nombreLuc";
                    pstmt = con.prepareStatement(sql);
                    pstmt.setString(1, cbSexoCon.getSelectedItem().toString());
                    pstmt.setString(2, cbEstadoCon.getSelectedItem().toString());
                }
                if (cbSexoCon.getSelectedIndex() == 0 && cbEquipoCon.getSelectedIndex() != 0
                        && cbCategoriaCon.getSelectedIndex() == 0 && cbEstadoCon.getSelectedIndex() != 0) {
                    sql = "SELECT * FROM luchador "
                            + "WHERE equipodeentrenamientoLuc=? AND estadoLuc=? "
                            + "ORDER BY sexoLuc,pesoLuc,estadoLuc,nombreLuc";
                    pstmt = con.prepareStatement(sql);
                    pstmt.setString(1, cbEquipoCon.getSelectedItem().toString());
                    pstmt.setString(2, cbEstadoCon.getSelectedItem().toString());
                }
                //
                if (cbSexoCon.getSelectedIndex() != 0 && cbEquipoCon.getSelectedIndex() != 0
                        && cbCategoriaCon.getSelectedIndex() != 0 && cbEstadoCon.getSelectedIndex() == 0) {
                    sql = "SELECT * FROM luchador "
                            + "WHERE sexoLuc=? AND equipodeentrenamientoLuc=? AND categoriaLuc=? "
                            + "ORDER BY sexoLuc,pesoLuc,estadoLuc,nombreLuc";
                    pstmt = con.prepareStatement(sql);
                    pstmt.setString(1, cbSexoCon.getSelectedItem().toString());
                    pstmt.setString(2, cbEquipoCon.getSelectedItem().toString());
                    pstmt.setString(3, cbCategoriaCon.getSelectedItem().toString());
                }
                if (cbSexoCon.getSelectedIndex() != 0 && cbEquipoCon.getSelectedIndex() == 0
                        && cbCategoriaCon.getSelectedIndex() != 0 && cbEstadoCon.getSelectedIndex() != 0) {
                    sql = "SELECT * FROM luchador "
                            + "WHERE sexoLuc=? AND categoriaLuc=? AND estadoLuc=? "
                            + "ORDER BY sexoLuc,pesoLuc,estadoLuc,nombreLuc";
                    pstmt = con.prepareStatement(sql);
                    pstmt.setString(1, cbSexoCon.getSelectedItem().toString());
                    pstmt.setString(2, cbCategoriaCon.getSelectedItem().toString());
                    pstmt.setString(3, cbEstadoCon.getSelectedItem().toString());
                }
                if (cbSexoCon.getSelectedIndex() != 0 && cbEquipoCon.getSelectedIndex() != 0
                        && cbCategoriaCon.getSelectedIndex() == 0 && cbEstadoCon.getSelectedIndex() != 0) {
                    sql = "SELECT * FROM luchador "
                            + "WHERE sexoLuc=? AND equipodeentrenamientoLuc=? AND estadoLuc=? "
                            + "ORDER BY sexoLuc,pesoLuc,estadoLuc,nombreLuc";
                    pstmt = con.prepareStatement(sql);
                    pstmt.setString(1, cbSexoCon.getSelectedItem().toString());
                    pstmt.setString(2, cbEquipoCon.getSelectedItem().toString());
                    pstmt.setString(3, cbEstadoCon.getSelectedItem().toString());
                }
                //
                if (cbSexoCon.getSelectedIndex() != 0 && cbEquipoCon.getSelectedIndex() != 0
                        && cbCategoriaCon.getSelectedIndex() != 0 && cbEstadoCon.getSelectedIndex() != 0) {
                    sql = "SELECT * FROM luchador "
                            + "WHERE sexoLuc=? AND equipodeentrenamientoLuc=? AND categoriaLuc=? AND estadoLuc=? "
                            + "ORDER BY sexoLuc,pesoLuc,estadoLuc,nombreLuc";
                    pstmt = con.prepareStatement(sql);
                    pstmt.setString(1, cbSexoCon.getSelectedItem().toString());
                    pstmt.setString(2, cbEquipoCon.getSelectedItem().toString());
                    pstmt.setString(3, cbCategoriaCon.getSelectedItem().toString());
                    pstmt.setString(4, cbEstadoCon.getSelectedItem().toString());
                }

                rs = pstmt.executeQuery();

                //HE DEJADO SIN MOSTRAR LA FECHA DE NACIMIENTO, EL PAÍS DE ORIGEN, EL APODO Y LA FOTO
                String titulos[] = {"SEXO", "NOMBRE", "EQUIPO", "PESO", "CATEGORÍA", "ALTURA", "Nº TOT.", "Nº VIC.", "Nº DER.", "ESTADO"};
                DefaultTableModel tm = new DefaultTableModel(titulos, 0);
                Object datosFila[] = new Object[10];
                while (rs.next() == true) {
                    datosFila[0] = rs.getString(2);
                    datosFila[1] = rs.getString(3);
                    datosFila[2] = rs.getString(7);
                    datosFila[3] = rs.getString(8);
                    datosFila[4] = rs.getString(9);
                    datosFila[5] = rs.getString(10);
                    datosFila[6] = rs.getString(11);
                    datosFila[7] = rs.getString(12);
                    datosFila[8] = rs.getString(13);
                    datosFila[9] = rs.getString(14);
                    tm.addRow(datosFila);
                }
                TablaUna.setModel(tm);

                //LINEAS PARA MODIFICAR EL TAMAÑO DE CADA COLUMNA
                TableColumnModel columnModel = TablaUna.getColumnModel();
                columnModel.getColumn(0).setPreferredWidth(38);
                columnModel.getColumn(1).setPreferredWidth(120);
                columnModel.getColumn(2).setPreferredWidth(68);
                columnModel.getColumn(3).setPreferredWidth(18);
                columnModel.getColumn(4).setPreferredWidth(97);
                columnModel.getColumn(5).setPreferredWidth(18);
                columnModel.getColumn(6).setPreferredWidth(18);
                columnModel.getColumn(7).setPreferredWidth(18);
                columnModel.getColumn(8).setPreferredWidth(18);
                columnModel.getColumn(9).setPreferredWidth(25);

                tfResultadosCon.setText(String.valueOf(TablaUna.getRowCount()));

                rs.close();
                pstmt.close();
                con.close();

            } catch (ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, "Error en conexión: ClassNotFoundException");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error en conexión: SQLException " + e);
            }
        }
    }//GEN-LAST:event_btnFiltrarConActionPerformed

    private void btnLimpiarConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarConActionPerformed
        // TODO add your handling code here:
        cbSexoCon.setSelectedIndex(0);
        cbEquipoCon.setSelectedIndex(0);
        cbCategoriaCon.setSelectedIndex(0);
        cbEstadoCon.setSelectedIndex(0);
        tfResultadosCon.setText("");
        DefaultTableModel dm = (DefaultTableModel) TablaUna.getModel();
        while (dm.getRowCount() > 0) {
            dm.removeRow(0);
        }
        btnExpTablaPDF.setEnabled(false);
    }//GEN-LAST:event_btnLimpiarConActionPerformed

    private void TablaUnaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaUnaMouseClicked
        // TODO add your handling code here:
        //EVENTO PARA EVITAR QUE LOS CAMPOS DE LA TABLA NO SE PUEDAN EDITAR PERO SÍ SELECCIONAR
        boolean flag = TablaUna.isEditing();

        if (flag == false) {
            JOptionPane.showMessageDialog(null, "No puede editar la tabla");
        }
    }//GEN-LAST:event_TablaUnaMouseClicked

    private void btnBuscarLucPosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarLucPosActionPerformed
        // TODO add your handling code here:
        if (tfIdLucPos.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo vacío, introduzca una ID");
        } else {
            try {
                String url = "jdbc:mysql://localhost:3306/mymma";
                String userName = "root";
                String password = "";
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, userName, password);

                String sql = "SELECT * "
                        + "FROM luchador "
                        + "WHERE idLuc=?";
                pstmt = con.prepareStatement(sql);

                pstmt.setString(1, tfIdLucPos.getText());

                rs = pstmt.executeQuery();

                if (rs.next() == true) {
                    btnExpPosterPDF.setEnabled(true);

                    jlPaisLucPos.setText("MADE IN " + rs.getString("paisLuc"));
                    jlApodoLucPos.setText(rs.getString("apodoLuc"));
                    jlFechaLucPos.setText("SINCE " + rs.getString("fechadenacimientoLuc"));
                    Blob foto = rs.getBlob("fotoLuc");

                    if (foto != null) {
                        byte[] datosImagenPos = foto.getBytes(1, (int) foto.length());
                        ImageIcon imagenPos = new ImageIcon(datosImagenPos);

                        //Las siguientes 3 líneas ajusta la imagen cargada al tamaño del jlabel
                        Image imagegetPos = imagenPos.getImage();
                        Image newimgPos = imagegetPos.getScaledInstance(panelFotoPoster.getWidth(), panelFotoPoster.getHeight(), Image.SCALE_DEFAULT);
                        imagenPos = new ImageIcon(newimgPos);

                        panelFotoPoster.setIcon(imagenPos);
                    }
                    tfIdLucPos.setEnabled(false);
                    btnBuscarLucPos.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(null, "No existe la id de luchador/ra " + tfIdLucPos.getText() + " en la BBDD");
                }

            } catch (ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, "Error en conexión: ClassNotFoundException");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error en conexión: SQLException");
            }
        }
    }//GEN-LAST:event_btnBuscarLucPosActionPerformed

    private void tfIdLucPosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIdLucPosKeyTyped
        // TODO add your handling code here:
        //SOLO PERMITE INTRODUCIR NÚMEROS EN EL CAMPO
        char car = evt.getKeyChar();
        if (car < '0' || car > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_tfIdLucPosKeyTyped

    private void btnLimpiarLucPosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarLucPosActionPerformed
        // TODO add your handling code here:
        btnExpPosterPDF.setEnabled(false);
        tfIdLucPos.setEnabled(true);
        btnBuscarLucPos.setEnabled(true);
        tfIdLucPos.setText("");
        tfIdLucPos.requestFocus();
        jlPaisLucPos.setText("MADE IN X");
        jlApodoLucPos.setText("X");
        jlFechaLucPos.setText("SINCE XXXX-XX-XX");
        panelFotoPoster.setIcon(null);
    }//GEN-LAST:event_btnLimpiarLucPosActionPerformed

    private void btnExpTablaPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpTablaPDFActionPerformed
        // TODO add your handling code here:
        String path = "";
        JFileChooser j = new JFileChooser();
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = j.showSaveDialog(this);

        if (x == JFileChooser.APPROVE_OPTION) {
            path = j.getSelectedFile().getPath();
        }

        //ORIENTACIÓN HORIZONTAL
        Document doc = new Document(PageSize.A4.rotate());
        //ORIENTACIÓN VERTICAL
        //Document doc = new Document();

        /*
        MÁS INFO ACERCA DE LA LIBRERÍA: itextpdf
        https://www.roseindia.net/java/itext/
         */
        try {
            /*
            Le añado un número random para que no salte la excepcion: FileNotFoundException 
            si al exportar otro pdf y tiene el mismo nombre del pdf anterior y este está 
            abierto por el usuario
             */
            Random r1 = new Random();
            int randomNumber = r1.nextInt(1000); //Numero aleatorio entre 0-1000, excluido el 1000

            PdfWriter.getInstance(doc, new FileOutputStream(path + "/TablaDeResultados_" + randomNumber + ".pdf"));
            doc.open();
            PdfPTable tb1 = new PdfPTable(10);

            float[] anchoDeColumnas = new float[]{57f, 125f, 50f, 26f, 77f, 18f, 18f, 18f, 18f, 52f};
            tb1.setWidths(anchoDeColumnas);

            PdfPCell cell = new PdfPCell(new Paragraph("MYMMA APP - RESULTADOS"));
            cell.setColspan(10);
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(new BaseColor(128, 200, 128));
            cell.setPadding(10.0f);
            tb1.addCell(cell);

            cell = new PdfPCell(new Paragraph("SEXO"));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(new BaseColor(255, 200, 0));
            cell.setPadding(10.0f);
            tb1.addCell(cell);

            cell = new PdfPCell(new Paragraph("NOMBRE"));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(new BaseColor(255, 200, 0));
            cell.setPadding(10.0f);
            tb1.addCell(cell);

            cell = new PdfPCell(new Paragraph("EQUIPO"));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(new BaseColor(255, 200, 0));
            cell.setPadding(10.0f);
            tb1.addCell(cell);

            cell = new PdfPCell(new Paragraph("PESO"));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(new BaseColor(255, 200, 0));
            cell.setPadding(10.0f);
            tb1.addCell(cell);

            cell = new PdfPCell(new Paragraph("CATEGORÍA"));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(new BaseColor(255, 200, 0));
            cell.setPadding(10.0f);
            tb1.addCell(cell);

            cell = new PdfPCell(new Paragraph("ALTURA"));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(new BaseColor(255, 200, 0));
            cell.setPadding(10.0f);
            tb1.addCell(cell);

            cell = new PdfPCell(new Paragraph("Nº TOT."));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(new BaseColor(255, 200, 0));
            cell.setPadding(10.0f);
            tb1.addCell(cell);

            cell = new PdfPCell(new Paragraph("Nº VIC."));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(new BaseColor(255, 200, 0));
            cell.setPadding(10.0f);
            tb1.addCell(cell);

            cell = new PdfPCell(new Paragraph("Nº DER."));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(new BaseColor(255, 200, 0));
            cell.setPadding(10.0f);
            tb1.addCell(cell);

            cell = new PdfPCell(new Paragraph("ESTADO"));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(new BaseColor(255, 200, 0));
            cell.setPadding(10.0f);
            tb1.addCell(cell);

            //POR SI NO QUIERES LO DE ARRIBA, PARA QUE SALGAN TODAS LAS CELDAS IGUALES
            /*
            tb1.addCell("SEXO");
            tb1.addCell("NOMBRE");
            tb1.addCell("EQUIPO DE ENTRENAMIENTO");
            tb1.addCell("PESO");
            tb1.addCell("CATEGORÍA");
            tb1.addCell("ALTURA");
            tb1.addCell("Nº TOTAL");
            tb1.addCell("Nº DE VICTORIAS");
            tb1.addCell("Nº DE DERROTAS");
            tb1.addCell("ESTADO");
             */
            for (int i = 0; i < TablaUna.getRowCount(); i++) {
                String sexo = TablaUna.getValueAt(i, 0).toString();
                String nombre = TablaUna.getValueAt(i, 1).toString();
                String equipo = TablaUna.getValueAt(i, 2).toString();
                String peso = TablaUna.getValueAt(i, 3).toString();
                String categoria = TablaUna.getValueAt(i, 4).toString();
                String altura = TablaUna.getValueAt(i, 5).toString();
                String total = TablaUna.getValueAt(i, 6).toString();
                String victorias = TablaUna.getValueAt(i, 7).toString();
                String derrotas = TablaUna.getValueAt(i, 8).toString();
                String estados = TablaUna.getValueAt(i, 9).toString();
                tb1.addCell(sexo);
                tb1.addCell(nombre);
                tb1.addCell(equipo);
                tb1.addCell(peso);
                tb1.addCell(categoria);
                tb1.addCell(altura);
                tb1.addCell(total);
                tb1.addCell(victorias);
                tb1.addCell(derrotas);
                tb1.addCell(estados);
            }
            doc.add(tb1);

        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(null, "FileNotFoundException: Cierre el PDF");
        } catch (DocumentException e) {
            JOptionPane.showMessageDialog(null, "Error DocumentException: " + e);
        }
        doc.close();
    }//GEN-LAST:event_btnExpTablaPDFActionPerformed

    private void btnExpPosterPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpPosterPDFActionPerformed
        // TODO add your handling code here:

        String path = "";
        JFileChooser j = new JFileChooser();
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = j.showSaveDialog(this);

        if (x == JFileChooser.APPROVE_OPTION) {
            path = j.getSelectedFile().getPath();
        }

        //ORIENTACIÓN VERTICAL
        Document document = new Document();

        try {
            /*
            Le añado un número random para que no salte la excepcion: FileNotFoundException 
            si al exportar otro pdf y tiene el mismo nombre del pdf anterior y este está 
            abierto por el usuario
             */
            Random r1 = new Random();
            int randomNumber = r1.nextInt(1000); //Numero aleatorio entre 0-1000, excluido el 1000

            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(path + "/Poster_" + randomNumber + ".pdf"));
            document.open();
            PdfContentByte contentByte = writer.getDirectContent();
            PdfTemplate template = contentByte.createTemplate(500, 500);

            Graphics2D g2 = template.createGraphics(500, 500);

            /*
            jlPaisLucPos.setFont(new Font("Tahoma", Font.PLAIN, 24));
            jlApodoLucPos.setFont(new Font("Viner Hand ITC", Font.PLAIN, 18));
            jlFechaLucPos.setFont(new Font("Stencil", Font.PLAIN, 18));
             */
            jPanel7.print(g2);
            g2.dispose();
            contentByte.addTemplate(template, 30, 300);
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(null, "FileNotFoundException: Cierre el PDF");
        } catch (DocumentException e) {
            JOptionPane.showMessageDialog(null, "Error DocumentException: " + e);
        } finally {
            if (document.isOpen()) {
                document.close();
            }
        }

    }//GEN-LAST:event_btnExpPosterPDFActionPerformed

    private void tfIdComEveKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIdComEveKeyTyped
        // TODO add your handling code here:
        char car = evt.getKeyChar();
        if (car < '0' || car > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_tfIdComEveKeyTyped

    private void btnBuscarComEveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarComEveActionPerformed
        // TODO add your handling code here:
        if (tfIdComEve.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo vacío, introduzca una ID");
        } else {
            try {
                String url = "jdbc:mysql://localhost:3306/mymma";
                String userName = "root";
                String password = "";
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, userName, password);

                //COMPROBAMOS SI LA ID DE EVENTO EXISTE
                st = con.createStatement();
                rs = st.executeQuery("SELECT * FROM evento");
                boolean flag_ideve = false;
                while (rs.next()) {
                    if (rs.getInt(1) != Integer.parseInt(tfIdComEve.getText())) {
                        flag_ideve = false;
                    } else {
                        flag_ideve = true;
                        tfNombreEve.setText(rs.getString("nombreEve"));
                        tfPromocionEve.setText(rs.getString("promocionEve"));
                        if ("ULTIMATE FIGHTING CHAMPIONSHIP".equals(rs.getString("promocionEve"))) {
                            ImageIcon imagen2 = new ImageIcon(getClass().getResource("/misimagenes/ufclogo.jpg"));
                            ImageIcon icono2 = new ImageIcon(imagen2.getImage().getScaledInstance(jlabelPromocionEve.getWidth(), jlabelPromocionEve.getHeight(), Image.SCALE_DEFAULT));
                            jlabelPromocionEve.setIcon(icono2);
                        }
                        if ("BELLATOR MMA".equals(rs.getString("promocionEve"))) {
                            ImageIcon imagen3 = new ImageIcon(getClass().getResource("/misimagenes/bellatormmalogo.jpg"));
                            ImageIcon icono3 = new ImageIcon(imagen3.getImage().getScaledInstance(jlabelPromocionEve.getWidth(), jlabelPromocionEve.getHeight(), Image.SCALE_DEFAULT));
                            jlabelPromocionEve.setIcon(icono3);
                        }
                        if ("ONE CHAMPIONSHIP".equals(rs.getString("promocionEve"))) {
                            ImageIcon imagen4 = new ImageIcon(getClass().getResource("/misimagenes/oclogo.jpg"));
                            ImageIcon icono4 = new ImageIcon(imagen4.getImage().getScaledInstance(jlabelPromocionEve.getWidth(), jlabelPromocionEve.getHeight(), Image.SCALE_DEFAULT));
                            jlabelPromocionEve.setIcon(icono4);
                        }
                        if ("CAGE WARRIORS".equals(rs.getString("promocionEve"))) {
                            ImageIcon imagen5 = new ImageIcon(getClass().getResource("/misimagenes/cwlogo.jpg"));
                            ImageIcon icono5 = new ImageIcon(imagen5.getImage().getScaledInstance(jlabelPromocionEve.getWidth(), jlabelPromocionEve.getHeight(), Image.SCALE_DEFAULT));
                            jlabelPromocionEve.setIcon(icono5);
                        }
                        if ("COMBATE AMERICAS MMA".equals(rs.getString("promocionEve"))) {
                            ImageIcon imagen6 = new ImageIcon(getClass().getResource("/misimagenes/calogo.jpg"));
                            ImageIcon icono6 = new ImageIcon(imagen6.getImage().getScaledInstance(jlabelPromocionEve.getWidth(), jlabelPromocionEve.getHeight(), Image.SCALE_DEFAULT));
                            jlabelPromocionEve.setIcon(icono6);
                        }
                        tfFechaEve.setText(rs.getDate("fechaEve").toString());
                        tfSedeEve.setText(rs.getString("sedeEve"));
                        tfCiudadEve.setText(rs.getString("ciudadEve"));
                        break;
                    }
                }
                st.close();

                //SI EXISTE RELLENAMOS EL JLIST CON LOS COMBATES
                //SELECT MULTITABLA
                if (flag_ideve == true) {
                    String sql = "SELECT c.idCom, c.ideventoCom,  lr.nombreLuc, la.nombreLuc "
                            + "FROM combate c "
                            + "INNER JOIN luchador lr ON lr.idLuc=c.idluchadorrojoCom "
                            + "INNER JOIN luchador la ON la.idLuc=c.idluchadorazulCom "
                            + "WHERE c.ideventoCom=?";
                    pstmt = con.prepareStatement(sql);
                    pstmt.setString(1, tfIdComEve.getText());
                    rs = pstmt.executeQuery();
                    while (rs.next() == true) {
                        modelo1.addElement(rs.getString("c.idCom") + " " + rs.getString("lr.nombreLuc") + " VS " + rs.getString("la.nombreLuc"));
                    }
                    rs.close();
                    pstmt.close();
                    tfIdComEve.setEnabled(false);
                    btnBuscarComEve.setEnabled(false);
                    btnMarcarCom.setEnabled(true);
                    btnMarcarCom.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(null, "Error: La ID de evento introducida (" + tfIdComEve.getText() + ") no existe en la BBDD");
                }
                con.close();

            } catch (ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, "Error en conexión: ClassNotFoundException");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error en conexión: SQLException " + e);
            }
        }
    }//GEN-LAST:event_btnBuscarComEveActionPerformed

    private void btnMarcarComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarcarComActionPerformed
        // TODO add your handling code here:
        if (jlistComEve.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Error: Seleccione un combate");
        } else {
            try {
                String url = "jdbc:mysql://localhost:3306/mymma";
                String userName = "root";
                String password = "";
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, userName, password);

                int id_com = Integer.parseInt(jlistComEve.getSelectedValue().replaceAll("[^\\.0123456789]", ""));

                st = con.createStatement();
                rs = st.executeQuery("SELECT * "
                        + "FROM combate c "
                        + "INNER JOIN luchador lr ON lr.idLuc=c.idluchadorrojoCom "
                        + "INNER JOIN luchador la ON la.idLuc=c.idluchadorazulCom "
                        + "INNER JOIN arbitro a ON a.idArb=c.idarbitroCom "
                        + "WHERE c.idCom='" + id_com + "'");
                while (rs.next()) {
                    jlabelSexo.setText(rs.getString("c.sexoCom"));
                    jlabelCategoria.setText(rs.getString("c.categoriaCom"));
                    if (rs.getInt("c.idcinturonCom") != 0) {
                        //ES POR EL CINTURÓN
                        ImageIcon imagen7 = new ImageIcon(getClass().getResource("/misimagenes/cinturonSI.jpg"));
                        ImageIcon icono7 = new ImageIcon(imagen7.getImage().getScaledInstance(jlabelImaCin.getWidth(), jlabelImaCin.getHeight(), Image.SCALE_DEFAULT));
                        jlabelImaCin.setIcon(icono7);
                    } else {
                        //NO ES POR EL CINTURÓN
                        ImageIcon imagen8 = new ImageIcon(getClass().getResource("/misimagenes/cinturonNO.jpg"));
                        ImageIcon icono8 = new ImageIcon(imagen8.getImage().getScaledInstance(jlabelImaCin.getWidth(), jlabelImaCin.getHeight(), Image.SCALE_DEFAULT));
                        jlabelImaCin.setIcon(icono8);
                    }
                    if (rs.getInt("c.idluchadorrojoCom") == rs.getInt("c.idLuchadorVencedorCom") && rs.getInt("c.idluchadorazulCom") == rs.getInt("c.idLuchadorDerrotadoCom")) {
                        //EL LUCHADOR ROJO VENCE Y EL LUCHADOR AZUL PIERDE
                        ImageIcon imagen9 = new ImageIcon(getClass().getResource("/misimagenes/checkSI.jpg"));
                        ImageIcon icono9 = new ImageIcon(imagen9.getImage().getScaledInstance(jlabelImaResLucRoj.getWidth(), jlabelImaResLucRoj.getHeight(), Image.SCALE_DEFAULT));
                        jlabelImaResLucRoj.setIcon(icono9);
                        ImageIcon imagen10 = new ImageIcon(getClass().getResource("/misimagenes/checkNO.jpg"));
                        ImageIcon icono10 = new ImageIcon(imagen10.getImage().getScaledInstance(jlabelImaResLucAzu.getWidth(), jlabelImaResLucAzu.getHeight(), Image.SCALE_DEFAULT));
                        jlabelImaResLucAzu.setIcon(icono10);
                    } else if (rs.getInt("c.idluchadorrojoCom") == rs.getInt("c.idLuchadorDerrotadoCom") && rs.getInt("c.idluchadorazulCom") == rs.getInt("c.idLuchadorVencedorCom")) {
                        //EL LUCHADOR ROJO PIERDE Y EL LUCHADOR AZUL VENCE
                        ImageIcon imagen11 = new ImageIcon(getClass().getResource("/misimagenes/checkNO.jpg"));
                        ImageIcon icono11 = new ImageIcon(imagen11.getImage().getScaledInstance(jlabelImaResLucRoj.getWidth(), jlabelImaResLucRoj.getHeight(), Image.SCALE_DEFAULT));
                        jlabelImaResLucRoj.setIcon(icono11);
                        ImageIcon imagen12 = new ImageIcon(getClass().getResource("/misimagenes/checkSI.jpg"));
                        ImageIcon icono12 = new ImageIcon(imagen12.getImage().getScaledInstance(jlabelImaResLucAzu.getWidth(), jlabelImaResLucAzu.getHeight(), Image.SCALE_DEFAULT));
                        jlabelImaResLucAzu.setIcon(icono12);
                    }

                    //CARGA LA FOTO DEL LUCHADOR ROJO
                    Blob fotoLucRojo = rs.getBlob("lr.fotoLuc");
                    if (fotoLucRojo != null) {
                        datosImagen = fotoLucRojo.getBytes(1, (int) fotoLucRojo.length());
                        ImageIcon imagen = new ImageIcon(datosImagen);

                        //Las siguientes 3 líneas ajusta la imagen cargada al tamaño del jlabel
                        Image imageget = imagen.getImage();
                        Image newimg = imageget.getScaledInstance(jlabelFotoLucRoj.getWidth(), jlabelFotoLucRoj.getHeight(), Image.SCALE_DEFAULT);
                        imagen = new ImageIcon(newimg);

                        jlabelFotoLucRoj.setIcon(imagen);
                    }
                    //CARGA LA FOTO DEL LUCHADOR AZUL
                    Blob fotoLucAzul = rs.getBlob("la.fotoLuc");
                    if (fotoLucAzul != null) {
                        datosImagen = fotoLucAzul.getBytes(1, (int) fotoLucAzul.length());
                        ImageIcon imagen = new ImageIcon(datosImagen);

                        //Las siguientes 3 líneas ajusta la imagen cargada al tamaño del jlabel
                        Image imageget = imagen.getImage();
                        Image newimg = imageget.getScaledInstance(jlabelFotoLucAzu.getWidth(), jlabelFotoLucAzu.getHeight(), Image.SCALE_DEFAULT);
                        imagen = new ImageIcon(newimg);

                        jlabelFotoLucAzu.setIcon(imagen);
                    }

                    jlabelRecordLucRoj.setText("RÉCORD: " + rs.getInt("lr.numerodevictoriasLuc") + " - " + rs.getInt("lr.numerodederrotasLuc"));
                    jlabelRecordLucAzu.setText("RÉCORD: " + rs.getInt("la.numerodevictoriasLuc") + " - " + rs.getInt("la.numerodederrotasLuc"));

                    jlabelArb.setText("ÁRBITRO: " + rs.getString("a.nombreArb"));

                    jlabelMetodo.setText("MÉTODO: " + rs.getString("c.metodoCom"));

                    jlabelRondas.setText("Nº DE RONDAS: " + rs.getInt("c.numeroderondasCom"));

                    jlabelTiempo.setText("TIEMPO: " + rs.getTime("c.tiempoCom"));
                }
                st.close();
                con.close();

            } catch (ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, "Error en conexión: ClassNotFoundException");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error en conexión: SQLException " + e);
            }
        }
    }//GEN-LAST:event_btnMarcarComActionPerformed

    private void btnLimpiarComEveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarComEveActionPerformed
        // TODO add your handling code here:
        tfIdComEve.requestFocus();
        tfIdComEve.setEnabled(true);
        btnBuscarComEve.setEnabled(true);
        tfIdComEve.setText("");
        tfNombreEve.setText("");
        tfPromocionEve.setText("");
        tfFechaEve.setText("");
        tfSedeEve.setText("");
        tfCiudadEve.setText("");
        jlabelPromocionEve.setIcon(null);
        modelo1.removeAllElements();
        btnMarcarCom.setEnabled(false);
        jlabelSexo.setText("SEXO");
        jlabelCategoria.setText("CATEGORIA");
        jlabelImaCin.setIcon(null);
        jlabelImaResLucRoj.setIcon(null);
        jlabelImaResLucAzu.setIcon(null);
        jlabelFotoLucRoj.setIcon(null);
        jlabelFotoLucAzu.setIcon(null);
        datosImagen = null;
        jlabelRecordLucRoj.setText("RÉCORD:");
        jlabelRecordLucAzu.setText("RÉCORD:");
        jlabelArb.setText("ÁRBITRO:");
        jlabelMetodo.setText("MÉTODO:");
        jlabelRondas.setText("Nº RONDAS:");
        jlabelTiempo.setText("TIEMPO:");
    }//GEN-LAST:event_btnLimpiarComEveActionPerformed

    private void btnResponderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResponderActionPerformed
        // TODO add your handling code here:
        if (cbPregunta.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Error: Seleccione una pregunta");
        } else {
            try {
                String url = "jdbc:mysql://localhost:3306/mymma";
                String userName = "root";
                String password = "";
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(url, userName, password);

                if (cbPregunta.getSelectedIndex() == 1) {
                    cbPregunta.setEnabled(false);
                    btnResponder.setEnabled(false);
                    st = con.createStatement();
                    rs = st.executeQuery("SELECT * FROM evento e1 WHERE asistenciaEve=(SELECT MAX(asistenciaEve) FROM evento e2)");
                    while (rs.next()) {
                        taRespuesta.setText("ID: " + rs.getString("idEve")
                                + "\nNOMBRE: " + rs.getString("nombreEve")
                                + "\nPROMOTOR: " + rs.getString("promocionEve")
                                + "\nFECHA: " + rs.getString("fechaEve")
                                + "\nSEDE: " + rs.getString("sedeEve")
                                + "\nCIUDAD: " + rs.getString("ciudadEve")
                                + "\nASISTENCIA: " + rs.getString("asistenciaEve")
                                + "\nRECAUDACIÓN: " + String.format("%.1f", rs.getFloat("recaudacionEve")));
                    }
                    st.close();
                }
                if (cbPregunta.getSelectedIndex() == 2) {
                    cbPregunta.setEnabled(false);
                    btnResponder.setEnabled(false);
                    st = con.createStatement();
                    rs = st.executeQuery("SELECT * FROM evento e1 WHERE recaudacionEve=(SELECT MAX(recaudacionEve) FROM evento e2)");
                    while (rs.next()) {
                        taRespuesta.setText("ID: " + rs.getString("idEve")
                                + "\nNOMBRE: " + rs.getString("nombreEve")
                                + "\nPROMOTOR: " + rs.getString("promocionEve")
                                + "\nFECHA: " + rs.getString("fechaEve")
                                + "\nSEDE: " + rs.getString("sedeEve")
                                + "\nCIUDAD: " + rs.getString("ciudadEve")
                                + "\nASISTENCIA: " + rs.getString("asistenciaEve")
                                + "\nRECAUDACIÓN: " + String.format("%.1f", rs.getFloat("recaudacionEve")));
                    }
                    st.close();
                }
                if (cbPregunta.getSelectedIndex() == 3) {
                    cbPregunta.setEnabled(false);
                    btnResponder.setEnabled(false);
                    st = con.createStatement();
                    rs = st.executeQuery("SELECT * FROM evento e1 WHERE asistenciaEve=(SELECT MIN(asistenciaEve) FROM evento e2)");
                    while (rs.next()) {
                        taRespuesta.setText("ID: " + rs.getString("idEve")
                                + "\nNOMBRE: " + rs.getString("nombreEve")
                                + "\nPROMOTOR: " + rs.getString("promocionEve")
                                + "\nFECHA: " + rs.getString("fechaEve")
                                + "\nSEDE: " + rs.getString("sedeEve")
                                + "\nCIUDAD: " + rs.getString("ciudadEve")
                                + "\nASISTENCIA: " + rs.getString("asistenciaEve")
                                + "\nRECAUDACIÓN: " + String.format("%.1f", rs.getFloat("recaudacionEve")));
                    }
                    st.close();
                }
                if (cbPregunta.getSelectedIndex() == 4) {
                    cbPregunta.setEnabled(false);
                    btnResponder.setEnabled(false);
                    st = con.createStatement();
                    rs = st.executeQuery("SELECT * FROM evento e1 WHERE recaudacionEve=(SELECT MIN(recaudacionEve) FROM evento e2)");
                    while (rs.next()) {
                        taRespuesta.setText("ID: " + rs.getString("idEve")
                                + "\nNOMBRE: " + rs.getString("nombreEve")
                                + "\nPROMOTOR: " + rs.getString("promocionEve")
                                + "\nFECHA: " + rs.getString("fechaEve")
                                + "\nSEDE: " + rs.getString("sedeEve")
                                + "\nCIUDAD: " + rs.getString("ciudadEve")
                                + "\nASISTENCIA: " + rs.getString("asistenciaEve")
                                + "\nRECAUDACIÓN: " + String.format("%.1f", rs.getFloat("recaudacionEve")));
                    }
                    st.close();
                }
                if (cbPregunta.getSelectedIndex() == 5) {
                    cbPregunta.setEnabled(false);
                    btnResponder.setEnabled(false);
                    st = con.createStatement();
                    rs = st.executeQuery("SELECT AVG(asistenciaEve) FROM evento");
                    while (rs.next()) {
                        taRespuesta.setText("ES DE " + String.format("%.2f", rs.getFloat("AVG(asistenciaEve)")) + " ESPECTADORES");
                    }
                    st.close();
                }
                if (cbPregunta.getSelectedIndex() == 6) {
                    cbPregunta.setEnabled(false);
                    btnResponder.setEnabled(false);
                    st = con.createStatement();
                    rs = st.executeQuery("SELECT AVG(recaudacionEve) FROM evento");
                    while (rs.next()) {
                        taRespuesta.setText("ES DE " + String.format("%.2f", rs.getFloat("AVG(recaudacionEve)")) + " DÓLARES");
                    }
                    st.close();
                }
                if (cbPregunta.getSelectedIndex() == 7) {
                    cbPregunta.setEnabled(false);
                    btnResponder.setEnabled(false);
                    st = con.createStatement();
                    rs = st.executeQuery("SELECT e.nombreEve, lr.nombreLuc, la.nombreLuc "
                            + "FROM combate c "
                            + "INNER JOIN luchador lr ON lr.idLuc=c.idluchadorrojoCom "
                            + "INNER JOIN luchador la ON la.idLuc=c.idluchadorazulCom "
                            + "INNER JOIN evento e ON e.idEve=c.ideventoCom "
                            + "ORDER BY c.ideventoCom");
                    String str = "";
                    taRespuesta.setText("NOMBRE DE EVENTO/COMBATE\n");
                    while (rs.next()) {
                        str = str + rs.getString("e.nombreEve") + "\n" + rs.getString("lr.nombreLuc") + "\tVS\t" + rs.getString("la.nombreLuc") + "\n\n";
                    }
                    taRespuesta.setText(taRespuesta.getText() + "\n" + str);
                    st.close();
                }
                if (cbPregunta.getSelectedIndex() == 8) {
                    cbPregunta.setEnabled(false);
                    btnResponder.setEnabled(false);
                    st = con.createStatement();
                    rs = st.executeQuery("SELECT nombreLuc, paisLuc FROM luchador ORDER BY paisLuc,nombreLuc");
                    String str = "";
                    taRespuesta.setText("PAÍS/NOMBRE DE LUCHADOR-RA\n");
                    while (rs.next()) {
                        str = str + rs.getString("paisLuc") + "\t" + rs.getString("nombreLuc") + "\n\n";
                    }
                    taRespuesta.setText(taRespuesta.getText() + "\n" + str);
                    st.close();
                }
                if (cbPregunta.getSelectedIndex() == 9) {
                    cbPregunta.setEnabled(false);
                    btnResponder.setEnabled(false);
                    st = con.createStatement();
                    rs = st.executeQuery("SELECT * FROM luchador l1 WHERE fechadenacimientoLuc=(SELECT MAX(fechadenacimientoLuc) FROM luchador l2)");
                    while (rs.next()) {
                        taRespuesta.setText(rs.getString("nombreLuc") + " NACIDO/A EN LA FECHA " + rs.getString("fechadenacimientoLuc"));
                    }
                    st.close();
                }
                if (cbPregunta.getSelectedIndex() == 10) {
                    cbPregunta.setEnabled(false);
                    btnResponder.setEnabled(false);
                    st = con.createStatement();
                    rs = st.executeQuery("SELECT * FROM luchador l1 WHERE fechadenacimientoLuc=(SELECT MIN(fechadenacimientoLuc) FROM luchador l2)");
                    while (rs.next()) {
                        taRespuesta.setText(rs.getString("nombreLuc") + " NACIDO/A EN LA FECHA " + rs.getString("fechadenacimientoLuc"));
                    }
                    st.close();
                }
                if (cbPregunta.getSelectedIndex() == 11) {
                    cbPregunta.setEnabled(false);
                    btnResponder.setEnabled(false);
                    st = con.createStatement();
                    rs = st.executeQuery("SELECT * FROM luchador");
                    String str = "";
                    taRespuesta.setText("NOMBRE DE LUCHADOR-RA/EDAD\n");
                    while (rs.next()) {
                        //LINEAS PARA OBTENER LA EDAD A TRAVES DE LA FECHA DE NACIMIENTO
                        Date fechanacim = rs.getDate("fechadenacimientoLuc");
                        DateTimeFormatter fmt = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                        LocalDate fechaNac = LocalDate.parse(fechanacim.toString(), fmt);
                        LocalDate currentDate = LocalDate.now();
                        Period periodo = Period.between(fechaNac, currentDate);
                        str = str + rs.getString("nombreLuc") + "\t" + periodo.getYears() + "\n\n";
                    }
                    taRespuesta.setText(taRespuesta.getText() + "\n" + str);
                    st.close();
                }
                if (cbPregunta.getSelectedIndex() == 12) {
                    cbPregunta.setEnabled(false);
                    btnResponder.setEnabled(false);
                    st = con.createStatement();
                    rs = st.executeQuery("SELECT cin.sexoCin, cin.nombreCin, l.nombreLuc "
                            + "FROM cinturon cin "
                            + "INNER JOIN luchador l ON l.idLuc=cin.idluchadorcampeonCin");
                    String str = "";
                    taRespuesta.setText("SEXO DEL CINTURÓN/NOMBRE DEL CINTURÓN/NOMBRE DE EL-LA CAMPEÓN-A\n");
                    while (rs.next()) {
                        str = str + rs.getString("cin.sexoCin") + "\t" + rs.getString("cin.nombreCin") + "\t" + rs.getString("l.nombreLuc") + "\n\n";
                    }
                    taRespuesta.setText(taRespuesta.getText() + "\n" + str);
                    st.close();
                }
                con.close();

            } catch (ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, "Error en conexión: ClassNotFoundException");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error en conexión: SQLException " + e);
            }
        }
    }//GEN-LAST:event_btnResponderActionPerformed

    private void btnLimpiarRespuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarRespuestaActionPerformed
        // TODO add your handling code here:
        cbPregunta.setEnabled(true);
        btnResponder.setEnabled(true);
        cbPregunta.setSelectedIndex(0);
        taRespuesta.setText("");
    }//GEN-LAST:event_btnLimpiarRespuestaActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        // TODO add your handling code here:
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmGuia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmGuia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmGuia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmGuia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmGuia().setVisible(true);
                dispose();
            }
        });
    }//GEN-LAST:event_btnAtrasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmConsulta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaUna;
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnBuscarComEve;
    private javax.swing.JButton btnBuscarLucPos;
    private javax.swing.JButton btnExpPosterPDF;
    private javax.swing.JButton btnExpTablaPDF;
    private javax.swing.JButton btnFiltrarCon;
    private javax.swing.JButton btnLimpiarComEve;
    private javax.swing.JButton btnLimpiarCon;
    private javax.swing.JButton btnLimpiarLucPos;
    private javax.swing.JButton btnLimpiarRespuesta;
    private javax.swing.JButton btnMarcarCom;
    private javax.swing.JButton btnResponder;
    private javax.swing.JComboBox<String> cbCategoriaCon;
    private javax.swing.JComboBox<String> cbEquipoCon;
    private javax.swing.JComboBox<String> cbEstadoCon;
    private javax.swing.JComboBox<String> cbPregunta;
    private javax.swing.JComboBox<String> cbSexoCon;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JDesktopPane jDesktopPane3;
    private javax.swing.JDesktopPane jDesktopPane4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JLabel jlApodoLucPos;
    private javax.swing.JLabel jlFechaLucPos;
    private javax.swing.JLabel jlPaisLucPos;
    private javax.swing.JLabel jlabelArb;
    private javax.swing.JLabel jlabelCategoria;
    private javax.swing.JLabel jlabelFotoLucAzu;
    private javax.swing.JLabel jlabelFotoLucRoj;
    private javax.swing.JLabel jlabelImaCin;
    private javax.swing.JLabel jlabelImaResLucAzu;
    private javax.swing.JLabel jlabelImaResLucRoj;
    private javax.swing.JLabel jlabelMetodo;
    private javax.swing.JLabel jlabelPromocionEve;
    private javax.swing.JLabel jlabelRecordLucAzu;
    private javax.swing.JLabel jlabelRecordLucRoj;
    private javax.swing.JLabel jlabelRondas;
    private javax.swing.JLabel jlabelSexo;
    private javax.swing.JLabel jlabelTiempo;
    private javax.swing.JList<String> jlistComEve;
    private javax.swing.JLabel panelFotoPoster;
    private javax.swing.JTextArea taRespuesta;
    private javax.swing.JTextField tfCiudadEve;
    private javax.swing.JTextField tfFechaEve;
    private javax.swing.JTextField tfIdComEve;
    private javax.swing.JTextField tfIdLucPos;
    private javax.swing.JTextField tfNombreEve;
    private javax.swing.JTextField tfPromocionEve;
    private javax.swing.JTextField tfResultadosCon;
    private javax.swing.JTextField tfSedeEve;
    // End of variables declaration//GEN-END:variables
}
